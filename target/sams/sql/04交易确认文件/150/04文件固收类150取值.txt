 --04文件固收类150取值逻辑
 
 with tab3 as (
      select distinct t2.l_businserialno
          from ta_tbusinremitmcurrents t2, ta_tremitmoneydetail t3
          
          where to_char(t3.d_expectdate, 'yyyyMMdd') >= '20200521'--LASTDATE
          and to_char(t3.d_expectdate, 'yyyyMMdd') < '20200522'--TRANSDATE
          and t2.l_remitserialno = t3.l_firstserialno
          -- created by 王超 20200427 加入划款成功的标志条件，防止划款失败的数据也被取出 -->
          and t3.c_status <> '4'
    )
    SELECT /*+ ordered use_nl(t3,t1)*/
         ER_CHANNEL_CODE            CHANNELCODE,
               ER_TRANS_DATE                 BUSINESSDATE,
               ER_APP_SHEET_SERIAL_NO        APPSHEETSERIALNO,
               ER_FUND_CODE                  FUNDCODE,
               ER_LARGE_REDEMPTION_FLAG      LARGEREDEMPTIONFLAG,
               -- ER_TRANSACTION_DATE      TRANSACTIONDATE, -->
               '20200521'  TRANSACTIONDATE,--LASTDATE
               ER_TRANSACTION_TIME           TRANSACTIONTIME,
               ER_TRANSACTION_ACCOUNT_ID     TRANSACTIONACCOUNTID,
               ER_DISTRIBUTOR_CODE           DISTRIBUTORCODE,
               '150'              BUSINESSCODE,--BUSINESSCODE
               ER_DISCOUNT_RATE_OF_COMM      DISCOUNTRATEOFCOMMISSION,
               ER_DEPOSIT_ACCT               DEPOSITACCT,
               ER_REGION_CODE                REGIONCODE,
               ER_CURRENCY_TYPE              CURRENCYTYPE,
               ER_BRANCH_CODE                BRANCHCODE,
               ER_ORIGINAL_APP_SHEET_NO      ORIGINALAPPSHEETNO,
               ER_ORIGINAL_SUBS_DATE         ORIGINALSUBSDATE,
               ER_INDIVIDUAL_OR_INSTITUTION  INDIVIDUALORINSTITUTION,
               ER_VALID_PERIOD               VALIDPERIOD,
               ER_DAYS_REDEMPTION_IN_ADVANCE DAYSREDEMPTIONINADVANCE,
               ER_REDEMPTION_DATE_IN_ADVANCE REDEMPTIONDATEINADVANCE,
               ER_ORIGINAL_SERIAL_NO         ORIGINALSERIALNO,
               ER_DATE_OF_PERIODIC_SUBS      DATEOFPERIODICSUBS,
               ER_TA_SERIAL_NO               TASERIALNO,
               ER_TERM_OF_PERIODIC_SUBS      TERMOFPERIODICSUBS,
               ER_FUTURE_BUY_DATE            FUTUREBUYDATE,
               ER_TARGET_DISTRIBUTOR_CODE    TARGETDISTRIBUTORCODE,
               ER_CHARGE                     CHARGE,
               ER_TARGET_BRANCH_CODE         TARGETBRANCHCODE,
               ER_TARGET_TRANSACT_ACCT_CODE  TARGETTRANSACTIONACCOUNTID,
               ER_TARGET_REGION_CODE         TARGETREGIONCODE,
               ER_DIVIDEND_RATIO             DIVIDENDRATIO,
               ER_SPECIFICATION              SPECIFICATION,
               ER_CODE_OF_TARGET_FUND        CODEOFTARGETFUND,
               ER_TOTAL_BACKEND_LOAD         TOTALBACKENDLOAD,
               ER_SHARE_CLASS                SHARECLASS,
               ER_ORIGINAL_CFM_DATE          ORIGINALCFMDATE,
               ER_DETAIL_FLAG                DETAILFLAG,
               ER_ORIGINAL_APP_DATE          ORIGINALAPPDATE,
               ER_DEF_DIVIDEND_METHOD        DEFDIVIDENDMETHOD,
               ER_FROZEN_CAUSE               FROZENCAUSE,
               ER_FREEZING_DEADLINE          FREEZINGDEADLINE,
               ER_VARIETY_CODE_PERIODIC_SUB  VARIETYCODEOFPERIODICSUBS,
               ER_SERIAL_NO_PERIODIC_SUB     SERIALNOOFPERIODICSUBS,
               ER_RATION_TYPE                RATIONTYPE,
               ER_TARGET_TA_ACCOUNT_ID       TARGETTAACCOUNTID,
               ER_TARGET_REGISTRAR_CODE      TARGETREGISTRARCODE,
               ER_NET_NO                     NETNO,
               ER_CUSTOMER_NO                CUSTOMERNO,
               ER_TARGET_SHARE_TYPE          TARGETSHARETYPE,
               ER_RATION_PROTOCOL_NO         RATIONPROTOCOLNO,
               ER_BEGIN_DATE_PERIODIC_SUBS   BEGINDATEOFPERIODICSUBS,
               ER_END_DATE_OF_PERIODIC_SUBS  ENDDATEOFPERIODICSUBS,
               ER_SEND_DAY_OF_PERIODIC_SUBS  SENDDAYOFPERIODICSUBS,
               ER_BROKER                     BROKER,
               ER_SALES_PROMOTION            SALESPROMOTION,
               ER_ACCEPT_METHOD              ACCEPTMETHOD,
               ER_FORCE_REDEMPTION_TYPE      FORCEREDEMPTIONTYPE,
               ER_TAKE_INCOME_FLAG           TAKEINCOMEFLAG,
               ER_PURPOSE_OF_PE_SUBS         PURPOSEOFPESUBS,
               ER_FREQUENCY_OF_PE_SUBS       FREQUENCYOFPESUBS,
               ER_PERIOD_SUB_TIME_UNIT       PERIODSUBTIMEUNIT,
               ER_BATCH_NUM_OF_PESUBS        BATCHNUMOFPESUBS,
               ER_CAPITAL_MODE               CAPITALMODE,
               ER_DETAIL_CAPTICAL_MODE       DETAILCAPTICALMODE,
               ER_BACKENLOAD_DISCOUNT        BACKENLOADDISCOUNT,
               ER_COMBINE_NUM                COMBINENUM,
               ER_FUTURE_SUBSCRIBE_DATE      FUTURESUBSCRIBEDATE,
               ER_TRADING_METHOD             TRADINGMETHOD,
               ER_LARGE_BUY_FLAG             LARGEBUYFLAG,
               ER_CHARGE_TYPE                CHARGETYPE,
               ER_SPECIFY_RATE_FEE           SPECIFYRATEFEE,
               ER_SPECIFY_FEE                SPECIFYFEE,
               ER_PRO_YIELD_TYPE             PROYIELDTYPE,
               ER_PRO_YIELD                  PROYIELD,
               ER_IN_CONTRACT                INCONTRACT,
               ER_OUT_CONTRACT               OUTCONTRACT,
               ER_VALID_FLAG                 VALIDFLAG,
               ER_RETURN_CODE                RETURNCODE,
               ER_EXPECTED_CFM_DATE          EXPECTEDCFMDATE,
               ER_ERROR_DEC                  ERRORDEC,
               ER_TA_PRODUCT_CODE            TAPRODUCTCODE,
               ER_BATCH_NO                   BATCHNO,
               ER_TA_ACCOUNT_ID          TAACCOUNTID,
          T.F_REPAYCAPITAL CONFIRMEDVOL,
          --20200331 部分返本需要加上分红数据  -->
          
          nvl((select nvl(n.F_PROFIT, 0) + nvl(n.F_SUBINTEREST, 0) +
               nvl(n.F_INTEREST, 0) from ta_tprofitdealcurrentdetails n where 
              exists (
            select 1 from tj_contractdetails t 
            where t.l_contractserialno = n.l_contractserialno
                  and t.c_fundacco = n.c_fundacco
                  and t.f_remainshares_sams != 0
             )
           and n.l_contractserialno = t.l_contractserialno
           and n.c_fundacco = t.c_fundacco
           and n.l_serialno = t.l_serialno
           ),0)+nvl(T.F_REPAYCAPITAL,0) CONFIRMEDAMOUNT,
           
           --T.F_REPAYCAPITAL CONFIRMEDAMOUNT  -->
          T.F_REPAYCAPITAL APPLICATIONVOL,
          '' APPLICATIONAMOUNT,
          '20200522' TRANSACTIONCFMDATE,--TRANSDATE
         '' ERRORDETAIL,
          '20200522' DOWNLOADDATE,--TRANSDATE
          ER_TA_SERIAL_NO REQUESTNO,
          nvl((select F_NETVALUE from (select k.F_NETVALUE,k.C_FUNDCODE from CRM_TFUNDDAY k order by k.D_DATE DESC )  WHERE ROWNUM = 1 and  C_FUNDCODE = er_ta_product_code),'1') AS NAV,
          '1' FROMTAFLAG,
           '20200522' TRANSDATE--TRANSDATE
          from ta_tprofitdealcurrentdetails t,  
         (             
             --20200511 本地修改  -->
             select *
               from d_exchange_req, p_product_info i
              where er_channel_code = 'TTTNETRFYH'-- CHANNELCODE
                and er_valid_flag = '01'
                and er_channel_code = i.pi_channel_code
                and er_fund_code = i.pi_channel_product_code
                and i.pi_product_type = '4'
                and i.pi_valid_flag in ('01', '02')
                and i.pi_check_state = '01'
                and er_return_code = '0000'
                and er_valid_flag = '01'
           
             ) t1,tab3 t3 
    where t.l_contractserialno = t1.er_in_contract
    and t.c_fundacco = t1.er_ta_account_id
    and nvl(T.F_REPAYCAPITAL,0) <> 0
    and t3.l_businserialno = t.l_serialno
          

