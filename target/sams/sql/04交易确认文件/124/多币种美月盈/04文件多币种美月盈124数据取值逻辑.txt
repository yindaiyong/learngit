--04文件多币种美月盈124数据取值逻辑

select ER_CHANNEL_CODE CHANNELCODE,
       ER_TRANS_DATE BUSINESSDATE,
       ER_APP_SHEET_SERIAL_NO APPSHEETSERIALNO,
       ER_FUND_CODE FUNDCODE,
       ER_LARGE_REDEMPTION_FLAG LARGEREDEMPTIONFLAG,
       ER_TRANSACTION_DATE TRANSACTIONDATE,
       ER_TRANSACTION_TIME TRANSACTIONTIME,
       ER_TRANSACTION_ACCOUNT_ID TRANSACTIONACCOUNTID,
       ER_DISTRIBUTOR_CODE DISTRIBUTORCODE,
       ER_APPLICATION_VOL APPLICATIONVOL,
       ER_APPLICATION_AMOUNT APPLICATIONAMOUNT,
       ER_BUSINESS_CODE BUSINESSCODE,
       ER_TA_ACCOUNT_ID TAACCOUNTID,
       ER_DISCOUNT_RATE_OF_COMM DISCOUNTRATEOFCOMMISSION,
       ER_DEPOSIT_ACCT DEPOSITACCT,
       ER_REGION_CODE REGIONCODE,
       ER_CURRENCY_TYPE CURRENCYTYPE,
       ER_BRANCH_CODE BRANCHCODE,
       ER_ORIGINAL_APP_SHEET_NO ORIGINALAPPSHEETNO,
       ER_ORIGINAL_SUBS_DATE ORIGINALSUBSDATE,
       ER_INDIVIDUAL_OR_INSTITUTION INDIVIDUALORINSTITUTION,
       ER_VALID_PERIOD VALIDPERIOD,
       ER_DAYS_REDEMPTION_IN_ADVANCE DAYSREDEMPTIONINADVANCE,
       ER_REDEMPTION_DATE_IN_ADVANCE REDEMPTIONDATEINADVANCE,
       ER_ORIGINAL_SERIAL_NO ORIGINALSERIALNO,
       ER_DATE_OF_PERIODIC_SUBS DATEOFPERIODICSUBS,
       ER_TA_SERIAL_NO TASERIALNO,
       ER_TERM_OF_PERIODIC_SUBS TERMOFPERIODICSUBS,
       ER_FUTURE_BUY_DATE FUTUREBUYDATE,
       ER_TARGET_DISTRIBUTOR_CODE TARGETDISTRIBUTORCODE,
       ER_CHARGE CHARGE,
       ER_TARGET_BRANCH_CODE TARGETBRANCHCODE,
       ER_TARGET_TRANSACT_ACCT_CODE TARGETTRANSACTIONACCOUNTID,
       ER_TARGET_REGION_CODE TARGETREGIONCODE,
       ER_DIVIDEND_RATIO DIVIDENDRATIO,
       ER_SPECIFICATION SPECIFICATION,
       ER_CODE_OF_TARGET_FUND CODEOFTARGETFUND,
       ER_TOTAL_BACKEND_LOAD TOTALBACKENDLOAD,
       ER_SHARE_CLASS SHARECLASS,
       ER_ORIGINAL_CFM_DATE ORIGINALCFMDATE,
       ER_DETAIL_FLAG DETAILFLAG,
       ER_ORIGINAL_APP_DATE ORIGINALAPPDATE,
       ER_DEF_DIVIDEND_METHOD DEFDIVIDENDMETHOD,
       ER_FROZEN_CAUSE FROZENCAUSE,
       ER_FREEZING_DEADLINE FREEZINGDEADLINE,
       ER_VARIETY_CODE_PERIODIC_SUB VARIETYCODEOFPERIODICSUBS,
       ER_SERIAL_NO_PERIODIC_SUB SERIALNOOFPERIODICSUBS,
       ER_RATION_TYPE RATIONTYPE,
       ER_TARGET_TA_ACCOUNT_ID TARGETTAACCOUNTID,
       ER_TARGET_REGISTRAR_CODE TARGETREGISTRARCODE,
       ER_NET_NO NETNO,
       ER_CUSTOMER_NO CUSTOMERNO,
       ER_TARGET_SHARE_TYPE TARGETSHARETYPE,
       ER_RATION_PROTOCOL_NO RATIONPROTOCOLNO,
       ER_BEGIN_DATE_PERIODIC_SUBS BEGINDATEOFPERIODICSUBS,
       ER_END_DATE_OF_PERIODIC_SUBS ENDDATEOFPERIODICSUBS,
       ER_SEND_DAY_OF_PERIODIC_SUBS SENDDAYOFPERIODICSUBS,
       ER_BROKER BROKER,
       ER_SALES_PROMOTION SALESPROMOTION,
       ER_ACCEPT_METHOD ACCEPTMETHOD,
       ER_FORCE_REDEMPTION_TYPE FORCEREDEMPTIONTYPE,
       ER_TAKE_INCOME_FLAG TAKEINCOMEFLAG,
       ER_PURPOSE_OF_PE_SUBS PURPOSEOFPESUBS,
       ER_FREQUENCY_OF_PE_SUBS FREQUENCYOFPESUBS,
       ER_PERIOD_SUB_TIME_UNIT PERIODSUBTIMEUNIT,
       ER_BATCH_NUM_OF_PESUBS BATCHNUMOFPESUBS,
       ER_CAPITAL_MODE CAPITALMODE,
       ER_DETAIL_CAPTICAL_MODE DETAILCAPTICALMODE,
       ER_BACKENLOAD_DISCOUNT BACKENLOADDISCOUNT,
       ER_COMBINE_NUM COMBINENUM,
       ER_FUTURE_SUBSCRIBE_DATE FUTURESUBSCRIBEDATE,
       ER_TRADING_METHOD TRADINGMETHOD,
       ER_LARGE_BUY_FLAG LARGEBUYFLAG,
       ER_CHARGE_TYPE CHARGETYPE,
       ER_SPECIFY_RATE_FEE SPECIFYRATEFEE,
       ER_SPECIFY_FEE SPECIFYFEE,
       ER_PRO_YIELD_TYPE PROYIELDTYPE,
       ER_PRO_YIELD PROYIELD,
       ER_IN_CONTRACT INCONTRACT,
       ER_OUT_CONTRACT OUTCONTRACT,
       ER_VALID_FLAG VALIDFLAG,
       ER_RETURN_CODE RETURNCODE,
       ER_EXPECTED_CFM_DATE EXPECTEDCFMDATE,
       ER_ERROR_DEC ERRORDEC,
       ER_TA_PRODUCT_CODE TAPRODUCTCODE,
       ER_BATCH_NO BATCHNO,
       to_char(nvl(T.D_CDATE, sysdate), 'YYYYMMDD') as DCDATE,
       decode(t.er_currency_type,
              '840',
              nvl(f_confirmbalance, 0),
              nvl(T.f_sumecbalance, 0)) CONFIRMEDAMOUNT,
       nvl(T.F_CONFIRMSHARES, 0) CONFIRMEDVOL,
       --总费用  -->
       t.f_totalfare charge,
       -- 归属渠道的费用 -->
       t.f_agencyfare agencyfee,
       -- 归属基金资产的费用 -->
       f_fundfare OtherFee1,
       -- 业绩报酬 -->
       t.f_tafare achievementPay, --业绩报酬 -->      
       0 FROMTAFLAG,
       nvl((select F_NETVALUE
             from (select k.F_NETVALUE, k.C_FUNDCODE
                     from datacenter.CRM_TFUNDDAY@sams_dc_dblink k
                    order by k.D_DATE DESC)
            WHERE ROWNUM = 1
              and C_FUNDCODE = er_ta_product_code),
           '1') AS NAV,
       '20200521' DOWNLOADDATE, --TRANSDATE
       '20200521' TRANSDATE --TRANSDATE
  from (select *
          from (select *
                  from sams.d_exchange_req
                 where er_channel_code = 'TTTNETB3' --CHANNELCODE
                   and er_return_code = '0000'
                   and er_business_code = '024' --BUSINESSCODE        
                   and ((er_fund_code = 'PFQD07' and
                       er_trans_date <= '20200521') --FUNDCODE OPENDAY(开放日最大的那天<确认日期)
                       or (er_fund_code = 'PFQD06' and
                       er_trans_date <= '20200520') --FUNDCODE OPENDAY(开放日最大的那天<确认日期)
                       )) tt
         right join        
         (select c.f_confirmshares,
                c.f_confirmbalance,
                c.f_sumecbalance,
                c.d_cdate,
                c.c_outrequestno,
                nvl(c.f_agencyfare, 0) f_agencyfare,
                nvl(c.f_tafare, 0) f_tafare,
                nvl(c.f_totalfare, 0) f_totalfare,
                nvl(c.f_fundfare, 0) f_fundfare
           from datacenter.ta_vconfirm@sams_dc_dblink c
          where exists (select t.er_ta_serial_no
                   from sams.d_exchange_req t
                  where er_channel_code = 'TTTNETB3' --CHANNELCODE
                    and er_return_code = '0000'
                    and er_business_code = '024' --BUSINESSCODE
                    and ((er_fund_code = 'PFQD07' and
                        er_trans_date <= '20200521') --FUNDCODE OPENDAY(开放日最大的那天<确认日期)
                        or (er_fund_code = 'PFQD06' and
                        er_trans_date <= '20200520') --FUNDCODE OPENDAY(开放日最大的那天<确认日期)
                        )
                    and not exists
                  (select 1
                           from sams.d_exchange_req_cfm c
                          where c.erc_channel_code = t.er_channel_code
                            and t.er_app_sheet_serial_no =
                                c.erc_app_sheet_serial_no
                            and t.er_fund_code = c.erc_fund_code
                            and c.erc_business_code = '024' --BUSINESSCODE
                            and c.erc_send_status = '01')
                    and t.er_ta_serial_no = c.c_outrequestno)
            and c.c_businflag = '03'
            and c.c_property = 'Q') t
            on tt.er_ta_serial_no = t.c_outrequestno) t
