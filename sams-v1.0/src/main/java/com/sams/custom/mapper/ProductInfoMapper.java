package com.sams.custom.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import tk.mybatis.mapper.common.Mapper;

import com.sams.common.web.PageInfo;
import com.sams.custom.model.FundMarketCustom;
import com.sams.custom.model.PProductInfo;

public interface ProductInfoMapper extends Mapper<PProductInfo>{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table P_PRODUCT_INFO
     *
     * @mbggenerated Wed Apr 10 10:02:45 CST 2019
     */
    int deleteByPrimaryKey1(Long piId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table P_PRODUCT_INFO
     *
     * @mbggenerated Wed Apr 10 10:02:45 CST 2019
     */
    int insert1(PProductInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table P_PRODUCT_INFO
     *
     * @mbggenerated Wed Apr 10 10:02:45 CST 2019
     */
    PProductInfo selectByPrimaryKey1(Long piId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table P_PRODUCT_INFO
     *
     * @mbggenerated Wed Apr 10 10:02:45 CST 2019
     */
    List<PProductInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table P_PRODUCT_INFO
     *
     * @mbggenerated Wed Apr 10 10:02:45 CST 2019
     */
    int updateByPrimaryKey1(PProductInfo record);
    
    int updateCodeAndType(FundMarketCustom fundMarketCustom);
    
    int updateBatch(List<FundMarketCustom> list);
    
    List<PProductInfo> selectByProductCodeList(Map<String,Object> map);
    
    PProductInfo selectByProductCode(String productCode);
    
    PProductInfo selectByProductCodeBatchNo(Map<String, Object> map);
    
    PProductInfo selectProductList(Map<String, Object> map);
	
	Map<String,Object> selectPositionByFundAcco(Map<String,Object> inputMap);
    
    long selectByConditionCount(Map<String,Object> map);
    
    List<PProductInfo> findPProductInfoCondition(@Param("pageInfo")PageInfo pageInfo, @Param("condition")Map<String, Object> condition);
    
    Map<String,Object> selectFundCodePropertyByFundCode(@Param("TAPRODUCTCODE") String taProductCode);
    
    Map<String,Object> selectCommonSharesByFundAcco(Map<String,Object> inputMap);
    
    Map<String,Object> selectActSharesByFundAcco(Map<String,Object> inputMap);
    
    Map<String,Object> selectAllByChannelCodeAndFundCode(@Param("FUNDCODE") String fundCode,@Param("CHANNELCODE") String channelCode,@Param("PRODUCTCODE") String productCode,@Param("BATCHNO") String batchNo);
    
    Map<String,Object> selectProYield(@Param("CHANNELCODE") String channelCode,@Param("FUNDCODE") String fundCode);
    
    List<PProductInfo> updateList(Map<String,String> map);
    
    List<Map<String, Object>> queryTnFundInfoComBox(@Param("CHANNELCODE")String channelCode);
    
    List<Map<String, Object>> queryTaFundInfoComBox(Map<String,Object> map);
    
    List<Map<String, Object>> queryProductInfoComBox(@Param("channelCode")String channelCode);
    
    List<Map<String, Object>> queryAllProductInfoComBox(@Param("CHANNELCODE")String channelCode);
    
    List<Map<String, Object>> queryAllTaFundInfoComBox();
    
    int selectProductCount(String channelProductCode);
    
    int selectTaProductCount(String fundCode);
    
    int updateProSetAndEndDate(@Param("tradeInfoList")List<Map<String,Object>> list,@Param("transDate") String transDate);
    
    List<Map<String, Object>> queryUsedProductInfoComBox(@Param("channelCode")String channelCode);

	int updateConnetBatchNo(@Param("productCode")String piChannelProductCode, @Param("batchNo")String batchNo,@Param("newBatchNo")String newBatchNo); 
    
	public List<PProductInfo> selectBatchProductInfo(Map<String, Object> map);

	List<Map<String, Object>> selectProductCfmWay(Map<String, Object> map);

	Map<String, Object> selectNoCurrenyPosition(Map<String, Object> inputMap);

	Map<String, Object> queryRemainShares(@Param("taProductCode")String taProductCode,
			@Param("inContract")String inContract);

	/**
	 * @Description 获取渠道下对应符合当前产品类型的所有产品列表
	 * @Author weijunjie
	 * @Date 2020/1/7 11:05
	 **/
	List<PProductInfo> selectByChannelAndTypes(@Param("channelCode") String channelCode,
                                               @Param("productTypes")String... productTypes);

	List<Map<String, Object>> queryTransConfirmDay(Map<String, Object> queryMap);

	List<Map<String, Object>> queryTransOpenDays(Map<String, Object> map);
	
	public int countProductSubChannelCode(Map<String, Object> qryMap);

	Map<String, Object> queryRelRemainShares(Map<String, Object> selectMap);

}