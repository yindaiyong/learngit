<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sams.custom.mapper.FundDividendCfmMapper" >
  <resultMap id="BaseResultMap" type="com.sams.custom.model.FundDividendCfm" >
    <id column="DC_ID" property="dcId" jdbcType="DECIMAL" />
    <result column="DC_CHANNEL_CODE" property="dcChannelCode" jdbcType="VARCHAR" />
    <result column="DC_TRANS_DATE" property="dcTransDate" jdbcType="VARCHAR" />
    <result column="DC_BASIS_FOR_CALCULA_DIVIDE" property="dcBasisForCalculaDivide" jdbcType="DECIMAL" />
    <result column="DC_TRANSACTION_CFM_DATE" property="dcTransactionCfmDate" jdbcType="VARCHAR" />
    <result column="DC_CURRENCY_TYPE" property="dcCurrencyType" jdbcType="VARCHAR" />
    <result column="DC_VOL_DIVIDE_REINVESTMENT" property="dcVolDivideReinvestment" jdbcType="DECIMAL" />
    <result column="DC_DIVIDENT_DATE" property="dcDividentDate" jdbcType="VARCHAR" />
    <result column="DC_DIVIDEND_AMOUNT" property="dcDividendAmount" jdbcType="DECIMAL" />
    <result column="DC_XR_DATE" property="dcXrDate" jdbcType="VARCHAR" />
    <result column="DC_CONFIRMED_AMOUNT" property="dcConfirmedAmount" jdbcType="DECIMAL" />
    <result column="DC_FUND_CODE" property="dcFundCode" jdbcType="VARCHAR" />
    <result column="DC_REGISTRATION_DATE" property="dcRegistrationDate" jdbcType="VARCHAR" />
    <result column="DC_RETURN_CODE" property="dcReturnCode" jdbcType="VARCHAR" />
    <result column="DC_TRANSACTION_ACCOUNT_ID" property="dcTransactionAccountId" jdbcType="VARCHAR" />
    <result column="DC_DISTRIBUTOR_CODE" property="dcDistributorCode" jdbcType="VARCHAR" />
    <result column="DC_BUSINESS_CODE" property="dcBusinessCode" jdbcType="VARCHAR" />
    <result column="DC_TA_ACCOUNT_ID" property="dcTaAccountId" jdbcType="VARCHAR" />
    <result column="DC_DIVIDEND_PER_UNIT" property="dcDividendPerUnit" jdbcType="DECIMAL" />
    <result column="DC_DEF_DIVIDEND_METHOD" property="dcDefDividendMethod" jdbcType="VARCHAR" />
    <result column="DC_DEPOSIT_ACCT" property="dcDepositAcct" jdbcType="VARCHAR" />
    <result column="DC_REGION_CODE" property="dcRegionCode" jdbcType="VARCHAR" />
    <result column="DC_DOWNLOAD_DATE" property="dcDownloadDate" jdbcType="VARCHAR" />
    <result column="DC_CHARGE" property="dcCharge" jdbcType="DECIMAL" />
    <result column="DC_AGENCY_FEE" property="dcAgencyFee" jdbcType="DECIMAL" />
    <result column="DC_TOTAL_FROZEN_VOL" property="dcTotalFrozenVol" jdbcType="DECIMAL" />
    <result column="DC_NAV" property="dcNav" jdbcType="DECIMAL" />
    <result column="DC_BRANCH_CODE" property="dcBranchCode" jdbcType="VARCHAR" />
    <result column="DC_OTHER_FEE1" property="dcOtherFee1" jdbcType="DECIMAL" />
    <result column="DC_OTHER_FEE2" property="dcOtherFee2" jdbcType="DECIMAL" />
    <result column="DC_INDIVIDUAL_OR_INSTITUTION" property="dcIndividualOrInstitution" jdbcType="VARCHAR" />
    <result column="DC_DIVIDEND_RATIO" property="dcDividendRatio" jdbcType="DECIMAL" />
    <result column="DC_TA_SERIAL_NO" property="dcTaSerialNo" jdbcType="VARCHAR" />
    <result column="DC_STAMP_DUTY" property="dcStampDuty" jdbcType="DECIMAL" />
    <result column="DC_FROZEN_BALANCE" property="dcFrozenBalance" jdbcType="DECIMAL" />
    <result column="DC_TRANSFER_FEE" property="dcTransferFee" jdbcType="DECIMAL" />
    <result column="DC_SHARE_CLASS" property="dcShareClass" jdbcType="VARCHAR" />
    <result column="DC_FEE_CALCULATOR" property="dcFeeCalculator" jdbcType="VARCHAR" />
    <result column="DC_DRAW_BONUS_UNIT" property="dcDrawBonusUnit" jdbcType="DECIMAL" />
    <result column="DC_FROZEN_SHARESFOR_REINVEST" property="dcFrozenSharesforReinvest" jdbcType="DECIMAL" />
    <result column="DC_DIVIDEND_TYPE" property="dcDividendType" jdbcType="VARCHAR" />
    <result column="DC_ORIGINAL_APP_SHEET_NO" property="dcOriginalAppSheetNo" jdbcType="VARCHAR" />
    <result column="DC_ACHIEVEMENT_PAY" property="dcAchievementPay" jdbcType="DECIMAL" />
    <result column="DC_ACHIEVEMENT_COMPEN" property="dcAchievementCompen" jdbcType="DECIMAL" />
    <result column="DC_VALID_FLAG" property="dcValidFlag" jdbcType="VARCHAR" />
    <result column="DC_ERROR_DEC" property="dcErrorDec" jdbcType="VARCHAR" />
    <result column="DC_SEND_STATUS" property="dcSendStatus" jdbcType="VARCHAR" />
    <result column="DC_GENERATE_STATUS" property="dcGenerateStatus" jdbcType="VARCHAR" />
    <result column="DC_SEND_FILE_TIME" property="dcSendFileTime" jdbcType="TIMESTAMP" />
    <result column="DC_GENERATE_FILE_TIME" property="dcGenerateFileTime" jdbcType="TIMESTAMP" />
    <result column="DC_IN_CONTRACT" property="inContract" jdbcType="VARCHAR" />
    <result column="DC_CTIME" property="dcCtime" jdbcType="TIMESTAMP" />
    <result column="DC_UTIME" property="dcUtime" jdbcType="TIMESTAMP" />
    <result column="DC_CUSER" property="dcCuser" jdbcType="VARCHAR" />
    <result column="DC_UUSER" property="dcUuser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    DC_ID, DC_CHANNEL_CODE, DC_TRANS_DATE, DC_BASIS_FOR_CALCULA_DIVIDE, DC_TRANSACTION_CFM_DATE, 
    DC_CURRENCY_TYPE, DC_VOL_DIVIDE_REINVESTMENT, DC_DIVIDENT_DATE, DC_DIVIDEND_AMOUNT, 
    DC_XR_DATE, DC_CONFIRMED_AMOUNT, DC_FUND_CODE, DC_REGISTRATION_DATE, DC_RETURN_CODE, 
    DC_TRANSACTION_ACCOUNT_ID, DC_DISTRIBUTOR_CODE, DC_BUSINESS_CODE, DC_TA_ACCOUNT_ID, 
    DC_DIVIDEND_PER_UNIT, DC_DEF_DIVIDEND_METHOD, DC_DEPOSIT_ACCT, DC_REGION_CODE, DC_DOWNLOAD_DATE, 
    DC_CHARGE, DC_AGENCY_FEE, DC_TOTAL_FROZEN_VOL, DC_NAV, DC_BRANCH_CODE, DC_OTHER_FEE1, 
    DC_OTHER_FEE2, DC_INDIVIDUAL_OR_INSTITUTION, DC_DIVIDEND_RATIO, DC_TA_SERIAL_NO, 
    DC_STAMP_DUTY, DC_FROZEN_BALANCE, DC_TRANSFER_FEE, DC_SHARE_CLASS, DC_FEE_CALCULATOR, 
    DC_DRAW_BONUS_UNIT, DC_FROZEN_SHARESFOR_REINVEST, DC_DIVIDEND_TYPE, DC_ORIGINAL_APP_SHEET_NO, 
    DC_ACHIEVEMENT_PAY, DC_ACHIEVEMENT_COMPEN, DC_VALID_FLAG, DC_ERROR_DEC, DC_SEND_STATUS, 
    DC_GENERATE_STATUS, DC_SEND_FILE_TIME, DC_GENERATE_FILE_TIME, DC_CTIME, DC_UTIME, 
    DC_CUSER, DC_UUSER,DC_IN_CONTRACT
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from D_FUND_DIVIDEND_CFM
    where DC_ID = #{dcId,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from D_FUND_DIVIDEND_CFM
    where DC_ID = #{dcId,jdbcType=DECIMAL}
  </delete>
  
  <select id="selectByChannelCodeBusinessDateCountCfm" resultType="integer" parameterType="hashMap" >
    select 
    count(*) selectCount
    from D_FUND_DIVIDEND_CFM
    where 1=1
    <if test="CHANNELCODE != null" >
      AND  DC_CHANNEL_CODE=#{CHANNELCODE,jdbcType=VARCHAR}
    </if>
    <if test="TRANSDATE != null" >
      AND  DC_TRANS_DATE=#{TRANSDATE,jdbcType=VARCHAR}
    </if>
  </select>
  
  <delete id="deleteByChannelCodeBusinessDateCfm" parameterType="hashMap" >
    delete from D_FUND_DIVIDEND_CFM
    where 1=1
    <if test="CHANNELCODE != null" >
      AND  DC_CHANNEL_CODE=#{CHANNELCODE,jdbcType=VARCHAR}
    </if>
    <if test="TRANSDATE != null" >
      AND  DC_TRANS_DATE=#{TRANSDATE,jdbcType=VARCHAR}
    </if>
    </delete>
    
   <insert id="insertByBatchCfm"  parameterType="java.util.List" >
    insert all
     <foreach collection="list" item="item" index="index">
      into D_FUND_DIVIDEND_CFM (
       <if test="item.CHANNELCODE != null" >
      DC_CHANNEL_CODE, 
      </if>
       <if test="item.TRANSACTIONCFMDATE != null" >
      DC_TRANS_DATE, 
      </if>
      <if test="item.BASISFORCALCULATINGDIVIDEND != null" >
      DC_BASIS_FOR_CALCULA_DIVIDE, 
      </if>
       <if test="item.CURBENEFITSHARES != null" >
      DC_BASIS_FOR_CALCULA_DIVIDE, 
      </if>
       <if test="item.TRANSACTIONCFMDATE != null" >
      DC_TRANSACTION_CFM_DATE, 
      </if>
       <if test="item.CURRENCYTYPE != null" >
      DC_CURRENCY_TYPE, 
      </if>
      <if test="item.VOLOFDIVIDENDFORREINVESTMENT != null" >
      DC_VOL_DIVIDE_REINVESTMENT, 
      </if>
       <if test="item.DIVIDENTDATE != null" >
      DC_DIVIDENT_DATE, 
      </if>
       <if test="item.DIVIDENDAMOUNT != null" >
      DC_DIVIDEND_AMOUNT, 
      </if>
       <if test="item.XRDATE != null" >
      DC_XR_DATE, 
      </if>
       <if test="item.CONFIRMEDAMOUNT != null" >
      DC_CONFIRMED_AMOUNT, 
      </if>
       <if test="item.FUNDCODE != null" >
      DC_FUND_CODE, 
      </if>
       <if test="item.REGISTRATIONDATE != null" >
      DC_REGISTRATION_DATE, 
      </if>
       <if test="item.RETURNCODE != null" >
      DC_RETURN_CODE, 
      </if>
       <if test="item.TRANSACTIONACCOUNTID != null" >
      DC_TRANSACTION_ACCOUNT_ID, 
      </if>
       <if test="item.DISTRIBUTORCODE != null" >
      DC_DISTRIBUTOR_CODE, 
      </if>
      DC_BUSINESS_CODE, 
       <if test="item.TAACCOUNTID != null" >
      DC_TA_ACCOUNT_ID, 
      </if>
      DC_DIVIDEND_PER_UNIT,
     <if test="item.DEFDIVIDENDMETHOD != null">
         DC_DEF_DIVIDEND_METHOD,
     </if>
       <if test="item.DEPOSITACCT != null" >
      DC_DEPOSIT_ACCT, 
      </if>
       <if test="item.REGIONCODE != null" >
      DC_REGION_CODE, 
      </if>
       <if test="item.DOWNLOADDATE != null" >
      DC_DOWNLOAD_DATE, 
      </if>
      DC_CHARGE, 
      DC_AGENCY_FEE, 
       <if test="item.TOTALFROZENVOL != null" >
      DC_TOTAL_FROZEN_VOL, 
      </if>
      DC_NAV, 
      <if test="item.BRANCHCODE != null" >
      DC_BRANCH_CODE, 
      </if>
       <if test="item.OTHERFEE1 != null" >
      DC_OTHER_FEE1, 
      </if>
       <if test="item.OTHERFEE2 != null" >
      DC_OTHER_FEE2,
      </if>
       <if test="item.INDIVIDUALORINSTITUTION != null" >
      DC_INDIVIDUAL_OR_INSTITUTION, 
      </if>
       <if test="item.DIVIDENDRATIO != null" >
      DC_DIVIDEND_RATIO, 
      </if>
       <if test="item.TASERIALNO != null" >
      DC_TA_SERIAL_NO ,
      </if>
       <if test="item.STAMPDUTY != null" >
      DC_STAMP_DUTY, 
      </if>
       <if test="item.FROZENBALANCE != null" >
      DC_FROZEN_BALANCE, 
      </if>
      DC_TRANSFER_FEE, 
      DC_SHARE_CLASS, 
       <if test="item.FEECALCULATOR != null" >
      DC_FEE_CALCULATOR, 
      </if>
      DC_DRAW_BONUS_UNIT, 
       <if test="item.FROZENSHARESFORREINVEST != null" >
      DC_FROZEN_SHARESFOR_REINVEST, 
      </if>
      DC_DIVIDEND_TYPE, 
       <if test="item.ORIGINALAPPSHEETNO != null" >
      DC_ORIGINAL_APP_SHEET_NO, 
      </if>
      <if test="item.INCONTRACT!= null" >
      DC_IN_CONTRACT, 
      </if>
      DC_ACHIEVEMENT_PAY, 
      DC_ACHIEVEMENT_COMPEN, 
      DC_VALID_FLAG 
	)
    values (
    <if test="item.CHANNELCODE != null" >
     #{item.CHANNELCODE,jdbcType=VARCHAR},
     </if>
     <if test="item.TRANSACTIONCFMDATE != null" >
     #{item.TRANSACTIONCFMDATE,jdbcType=VARCHAR},
     </if>
     <if test="item.BASISFORCALCULATINGDIVIDEND != null" >
      #{item.BASISFORCALCULATINGDIVIDEND,jdbcType=VARCHAR},
      </if>
     <if test="item.CURBENEFITSHARES != null" >
     #{item.CURBENEFITSHARES,jdbcType=DECIMAL},
     </if>
     <if test="item.TRANSACTIONCFMDATE != null" >
     #{item.TRANSACTIONCFMDATE,jdbcType=VARCHAR},
     </if>
     <if test="item.CURRENCYTYPE != null" >
     #{item.CURRENCYTYPE,jdbcType=VARCHAR},
     </if>
     <if test="item.VOLOFDIVIDENDFORREINVESTMENT != null" >
      #{item.VOLOFDIVIDENDFORREINVESTMENT,jdbcType=VARCHAR},
      </if>
     <if test="item.DIVIDENTDATE != null" >
     #{item.DIVIDENTDATE,jdbcType=VARCHAR},
     </if>
     <if test="item.DIVIDENDAMOUNT != null" >
     #{item.DIVIDENDAMOUNT,jdbcType=DECIMAL},
     </if>
     <if test="item.XRDATE != null" >
     #{item.XRDATE,jdbcType=VARCHAR},
     </if>
     <if test="item.CONFIRMEDAMOUNT != null" >
     #{item.CONFIRMEDAMOUNT,jdbcType=DECIMAL},
     </if>
     <if test="item.FUNDCODE != null" >
     #{item.FUNDCODE,jdbcType=VARCHAR},
     </if>
     <if test="item.REGISTRATIONDATE != null" >
     #{item.REGISTRATIONDATE,jdbcType=VARCHAR},
     </if>
     <if test="item.RETURNCODE != null" >
     #{item.RETURNCODE,jdbcType=VARCHAR},
     </if>
     <if test="item.TRANSACTIONACCOUNTID != null" >
     #{item.TRANSACTIONACCOUNTID,jdbcType=VARCHAR},
     </if>
     <if test="item.DISTRIBUTORCODE != null" >
     #{item.DISTRIBUTORCODE,jdbcType=VARCHAR},
     </if>
     '143',
     <if test="item.TAACCOUNTID != null" >
     #{item.TAACCOUNTID,jdbcType=VARCHAR},
     </if>
     0,
     <if test="item.DEFDIVIDENDMETHOD != null">
         #{item.DEFDIVIDENDMETHOD,jdbcType=VARCHAR},
     </if>
     <if test="item.DEPOSITACCT != null" >
     #{item.DEPOSITACCT,jdbcType=VARCHAR},
     </if>
     <if test="item.REGIONCODE != null" >
     #{item.REGIONCODE,jdbcType=VARCHAR},
     </if>
     <if test="item.DOWNLOADDATE != null" >
     #{item.DOWNLOADDATE,jdbcType=VARCHAR},
     </if>
     0,
     0,
     <if test="item.TOTALFROZENVOL != null" >
     #{item.TOTALFROZENVOL,jdbcType=DECIMAL},
     </if>
      1,
     <if test="item.BRANCHCODE != null" >
     #{item.BRANCHCODE,jdbcType=VARCHAR},
     </if>
     <if test="item.OTHERFEE1 != null" >
     #{item.OTHERFEE1,jdbcType=DECIMAL},
     </if>
     <if test="item.OTHERFEE2 != null" >
     #{item.OTHERFEE2,jdbcType=DECIMAL},
     </if>
     <if test="item.INDIVIDUALORINSTITUTION != null" >
     #{item.INDIVIDUALORINSTITUTION,jdbcType=VARCHAR},
     </if>
     <if test="item.DIVIDENDRATIO != null" >
     #{item.DIVIDENDRATIO,jdbcType=DECIMAL},
     </if>
     <if test="item.TASERIALNO != null" >
     #{item.TASERIALNO,jdbcType=VARCHAR},
     </if>
     <if test="item.STAMPDUTY != null" >
     #{item.STAMPDUTY,jdbcType=DECIMAL},
     </if>
     <if test="item.FROZENBALANCE != null" >
     #{item.FROZENBALANCE,jdbcType=DECIMAL},
     </if>
      0,
     '0',
     <if test="item.FEECALCULATOR != null" >
     #{item.FEECALCULATOR,jdbcType=VARCHAR},
     </if>
     10000,
     <if test="item.FROZENSHARESFORREINVEST != null" >
     #{item.FROZENSHARESFORREINVEST,jdbcType=DECIMAL},
     </if>
     '0',
     <if test="item.ORIGINALAPPSHEETNO != null" >
     #{item.ORIGINALAPPSHEETNO,jdbcType=VARCHAR},
     </if>
     <if test="item.INCONTRACT != null" >
     #{item.INCONTRACT,jdbcType=VARCHAR},
     </if>
     0,
     0,
	'01'
 )
             </foreach>
      select 1 from dual
  </insert>
  
  <insert id="insert" parameterType="com.sams.custom.model.FundDividendCfm" >
    insert into D_FUND_DIVIDEND_CFM (DC_ID, DC_CHANNEL_CODE, DC_TRANS_DATE, 
      DC_BASIS_FOR_CALCULA_DIVIDE, DC_TRANSACTION_CFM_DATE, 
      DC_CURRENCY_TYPE, DC_VOL_DIVIDE_REINVESTMENT, 
      DC_DIVIDENT_DATE, DC_DIVIDEND_AMOUNT, DC_XR_DATE, 
      DC_CONFIRMED_AMOUNT, DC_FUND_CODE, DC_REGISTRATION_DATE, 
      DC_RETURN_CODE, DC_TRANSACTION_ACCOUNT_ID, DC_DISTRIBUTOR_CODE, 
      DC_BUSINESS_CODE, DC_TA_ACCOUNT_ID, DC_DIVIDEND_PER_UNIT, 
      DC_DEF_DIVIDEND_METHOD, DC_DEPOSIT_ACCT, DC_REGION_CODE, 
      DC_DOWNLOAD_DATE, DC_CHARGE, DC_AGENCY_FEE, 
      DC_TOTAL_FROZEN_VOL, DC_NAV, DC_BRANCH_CODE, 
      DC_OTHER_FEE1, DC_OTHER_FEE2, DC_INDIVIDUAL_OR_INSTITUTION, 
      DC_DIVIDEND_RATIO, DC_TA_SERIAL_NO, DC_STAMP_DUTY, 
      DC_FROZEN_BALANCE, DC_TRANSFER_FEE, DC_SHARE_CLASS, 
      DC_FEE_CALCULATOR, DC_DRAW_BONUS_UNIT, DC_FROZEN_SHARESFOR_REINVEST, 
      DC_DIVIDEND_TYPE, DC_ORIGINAL_APP_SHEET_NO, DC_ACHIEVEMENT_PAY, 
      DC_ACHIEVEMENT_COMPEN, DC_VALID_FLAG, DC_ERROR_DEC, 
      DC_SEND_STATUS, DC_GENERATE_STATUS, DC_SEND_FILE_TIME, 
      DC_GENERATE_FILE_TIME, DC_CTIME, DC_UTIME, 
      DC_CUSER, DC_UUSER,DC_IN_CONTRACT)
    values (#{dcId,jdbcType=DECIMAL}, #{dcChannelCode,jdbcType=VARCHAR}, #{dcTransDate,jdbcType=VARCHAR}, 
      #{dcBasisForCalculaDivide,jdbcType=DECIMAL}, #{dcTransactionCfmDate,jdbcType=VARCHAR}, 
      #{dcCurrencyType,jdbcType=VARCHAR}, #{dcVolDivideReinvestment,jdbcType=DECIMAL}, 
      #{dcDividentDate,jdbcType=VARCHAR}, #{dcDividendAmount,jdbcType=DECIMAL}, #{dcXrDate,jdbcType=VARCHAR}, 
      #{dcConfirmedAmount,jdbcType=DECIMAL}, #{dcFundCode,jdbcType=VARCHAR}, #{dcRegistrationDate,jdbcType=VARCHAR}, 
      #{dcReturnCode,jdbcType=VARCHAR}, #{dcTransactionAccountId,jdbcType=VARCHAR}, #{dcDistributorCode,jdbcType=VARCHAR}, 
      #{dcBusinessCode,jdbcType=VARCHAR}, #{dcTaAccountId,jdbcType=VARCHAR}, #{dcDividendPerUnit,jdbcType=DECIMAL}, 
      #{dcDefDividendMethod,jdbcType=VARCHAR}, #{dcDepositAcct,jdbcType=VARCHAR}, #{dcRegionCode,jdbcType=VARCHAR}, 
      #{dcDownloadDate,jdbcType=VARCHAR}, #{dcCharge,jdbcType=DECIMAL}, #{dcAgencyFee,jdbcType=DECIMAL}, 
      #{dcTotalFrozenVol,jdbcType=DECIMAL}, #{dcNav,jdbcType=DECIMAL}, #{dcBranchCode,jdbcType=VARCHAR}, 
      #{dcOtherFee1,jdbcType=DECIMAL}, #{dcOtherFee2,jdbcType=DECIMAL}, #{dcIndividualOrInstitution,jdbcType=VARCHAR}, 
      #{dcDividendRatio,jdbcType=DECIMAL}, #{dcTaSerialNo,jdbcType=VARCHAR}, #{dcStampDuty,jdbcType=DECIMAL}, 
      #{dcFrozenBalance,jdbcType=DECIMAL}, #{dcTransferFee,jdbcType=DECIMAL}, #{dcShareClass,jdbcType=VARCHAR}, 
      #{dcFeeCalculator,jdbcType=VARCHAR}, #{dcDrawBonusUnit,jdbcType=DECIMAL}, #{dcFrozenSharesforReinvest,jdbcType=DECIMAL}, 
      #{dcDividendType,jdbcType=VARCHAR}, #{dcOriginalAppSheetNo,jdbcType=VARCHAR}, #{dcAchievementPay,jdbcType=DECIMAL}, 
      #{dcAchievementCompen,jdbcType=DECIMAL}, #{dcValidFlag,jdbcType=VARCHAR}, #{dcErrorDec,jdbcType=VARCHAR}, 
      #{dcSendStatus,jdbcType=VARCHAR}, #{dcGenerateStatus,jdbcType=VARCHAR}, #{dcSendFileTime,jdbcType=TIMESTAMP}, 
      #{dcGenerateFileTime,jdbcType=TIMESTAMP}, #{dcCtime,jdbcType=TIMESTAMP}, #{dcUtime,jdbcType=TIMESTAMP}, 
      #{dcCuser,jdbcType=VARCHAR}, #{dcUuser,jdbcType=VARCHAR},#{dcInContract,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.sams.custom.model.FundDividendCfm" >
    insert into D_FUND_DIVIDEND_CFM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dcId != null" >
        DC_ID,
      </if>
      <if test="dcChannelCode != null" >
        DC_CHANNEL_CODE,
      </if>
      <if test="dcTransDate != null" >
        DC_TRANS_DATE,
      </if>
      <if test="dcBasisForCalculaDivide != null" >
        DC_BASIS_FOR_CALCULA_DIVIDE,
      </if>
      <if test="dcTransactionCfmDate != null" >
        DC_TRANSACTION_CFM_DATE,
      </if>
      <if test="dcCurrencyType != null" >
        DC_CURRENCY_TYPE,
      </if>
      <if test="dcVolDivideReinvestment != null" >
        DC_VOL_DIVIDE_REINVESTMENT,
      </if>
      <if test="dcDividentDate != null" >
        DC_DIVIDENT_DATE,
      </if>
      <if test="dcDividendAmount != null" >
        DC_DIVIDEND_AMOUNT,
      </if>
      <if test="dcXrDate != null" >
        DC_XR_DATE,
      </if>
      <if test="dcConfirmedAmount != null" >
        DC_CONFIRMED_AMOUNT,
      </if>
      <if test="dcFundCode != null" >
        DC_FUND_CODE,
      </if>
      <if test="dcRegistrationDate != null" >
        DC_REGISTRATION_DATE,
      </if>
      <if test="dcReturnCode != null" >
        DC_RETURN_CODE,
      </if>
      <if test="dcTransactionAccountId != null" >
        DC_TRANSACTION_ACCOUNT_ID,
      </if>
      <if test="dcDistributorCode != null" >
        DC_DISTRIBUTOR_CODE,
      </if>
      <if test="dcBusinessCode != null" >
        DC_BUSINESS_CODE,
      </if>
      <if test="dcTaAccountId != null" >
        DC_TA_ACCOUNT_ID,
      </if>
      <if test="dcDividendPerUnit != null" >
        DC_DIVIDEND_PER_UNIT,
      </if>
      <if test="dcDefDividendMethod != null" >
        DC_DEF_DIVIDEND_METHOD,
      </if>
      <if test="dcDepositAcct != null" >
        DC_DEPOSIT_ACCT,
      </if>
      <if test="dcRegionCode != null" >
        DC_REGION_CODE,
      </if>
      <if test="dcDownloadDate != null" >
        DC_DOWNLOAD_DATE,
      </if>
      <if test="dcCharge != null" >
        DC_CHARGE,
      </if>
      <if test="dcAgencyFee != null" >
        DC_AGENCY_FEE,
      </if>
      <if test="dcTotalFrozenVol != null" >
        DC_TOTAL_FROZEN_VOL,
      </if>
      <if test="dcNav != null" >
        DC_NAV,
      </if>
      <if test="dcBranchCode != null" >
        DC_BRANCH_CODE,
      </if>
      <if test="dcOtherFee1 != null" >
        DC_OTHER_FEE1,
      </if>
      <if test="dcOtherFee2 != null" >
        DC_OTHER_FEE2,
      </if>
      <if test="dcIndividualOrInstitution != null" >
        DC_INDIVIDUAL_OR_INSTITUTION,
      </if>
      <if test="dcDividendRatio != null" >
        DC_DIVIDEND_RATIO,
      </if>
      <if test="dcTaSerialNo != null" >
        DC_TA_SERIAL_NO,
      </if>
      <if test="dcStampDuty != null" >
        DC_STAMP_DUTY,
      </if>
      <if test="dcFrozenBalance != null" >
        DC_FROZEN_BALANCE,
      </if>
      <if test="dcTransferFee != null" >
        DC_TRANSFER_FEE,
      </if>
      <if test="dcShareClass != null" >
        DC_SHARE_CLASS,
      </if>
      <if test="dcFeeCalculator != null" >
        DC_FEE_CALCULATOR,
      </if>
      <if test="dcDrawBonusUnit != null" >
        DC_DRAW_BONUS_UNIT,
      </if>
      <if test="dcFrozenSharesforReinvest != null" >
        DC_FROZEN_SHARESFOR_REINVEST,
      </if>
      <if test="dcDividendType != null" >
        DC_DIVIDEND_TYPE,
      </if>
      <if test="dcOriginalAppSheetNo != null" >
        DC_ORIGINAL_APP_SHEET_NO,
      </if>
      <if test="dcAchievementPay != null" >
        DC_ACHIEVEMENT_PAY,
      </if>
      <if test="dcAchievementCompen != null" >
        DC_ACHIEVEMENT_COMPEN,
      </if>
      <if test="dcValidFlag != null" >
        DC_VALID_FLAG,
      </if>
      <if test="dcErrorDec != null" >
        DC_ERROR_DEC,
      </if>
      <if test="dcSendStatus != null" >
        DC_SEND_STATUS,
      </if>
      <if test="dcGenerateStatus != null" >
        DC_GENERATE_STATUS,
      </if>
      <if test="dcSendFileTime != null" >
        DC_SEND_FILE_TIME,
      </if>
      <if test="dcGenerateFileTime != null" >
        DC_GENERATE_FILE_TIME,
      </if>
      <if test="dcCtime != null" >
        DC_CTIME,
      </if>
      <if test="dcUtime != null" >
        DC_UTIME,
      </if>
      <if test="dcCuser != null" >
        DC_CUSER,
      </if>
      <if test="dcUuser != null" >
        DC_UUSER,
      </if>
      <if test="dcInContract != null" >
        DC_IN_CONTRACT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dcId != null" >
        #{dcId,jdbcType=DECIMAL},
      </if>
      <if test="dcChannelCode != null" >
        #{dcChannelCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTransDate != null" >
        #{dcTransDate,jdbcType=VARCHAR},
      </if>
      <if test="dcBasisForCalculaDivide != null" >
        #{dcBasisForCalculaDivide,jdbcType=DECIMAL},
      </if>
      <if test="dcTransactionCfmDate != null" >
        #{dcTransactionCfmDate,jdbcType=VARCHAR},
      </if>
      <if test="dcCurrencyType != null" >
        #{dcCurrencyType,jdbcType=VARCHAR},
      </if>
      <if test="dcVolDivideReinvestment != null" >
        #{dcVolDivideReinvestment,jdbcType=DECIMAL},
      </if>
      <if test="dcDividentDate != null" >
        #{dcDividentDate,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendAmount != null" >
        #{dcDividendAmount,jdbcType=DECIMAL},
      </if>
      <if test="dcXrDate != null" >
        #{dcXrDate,jdbcType=VARCHAR},
      </if>
      <if test="dcConfirmedAmount != null" >
        #{dcConfirmedAmount,jdbcType=DECIMAL},
      </if>
      <if test="dcFundCode != null" >
        #{dcFundCode,jdbcType=VARCHAR},
      </if>
      <if test="dcRegistrationDate != null" >
        #{dcRegistrationDate,jdbcType=VARCHAR},
      </if>
      <if test="dcReturnCode != null" >
        #{dcReturnCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTransactionAccountId != null" >
        #{dcTransactionAccountId,jdbcType=VARCHAR},
      </if>
      <if test="dcDistributorCode != null" >
        #{dcDistributorCode,jdbcType=VARCHAR},
      </if>
      <if test="dcBusinessCode != null" >
        #{dcBusinessCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTaAccountId != null" >
        #{dcTaAccountId,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendPerUnit != null" >
        #{dcDividendPerUnit,jdbcType=DECIMAL},
      </if>
      <if test="dcDefDividendMethod != null" >
        #{dcDefDividendMethod,jdbcType=VARCHAR},
      </if>
      <if test="dcDepositAcct != null" >
        #{dcDepositAcct,jdbcType=VARCHAR},
      </if>
      <if test="dcRegionCode != null" >
        #{dcRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="dcDownloadDate != null" >
        #{dcDownloadDate,jdbcType=VARCHAR},
      </if>
      <if test="dcCharge != null" >
        #{dcCharge,jdbcType=DECIMAL},
      </if>
      <if test="dcAgencyFee != null" >
        #{dcAgencyFee,jdbcType=DECIMAL},
      </if>
      <if test="dcTotalFrozenVol != null" >
        #{dcTotalFrozenVol,jdbcType=DECIMAL},
      </if>
      <if test="dcNav != null" >
        #{dcNav,jdbcType=DECIMAL},
      </if>
      <if test="dcBranchCode != null" >
        #{dcBranchCode,jdbcType=VARCHAR},
      </if>
      <if test="dcOtherFee1 != null" >
        #{dcOtherFee1,jdbcType=DECIMAL},
      </if>
      <if test="dcOtherFee2 != null" >
        #{dcOtherFee2,jdbcType=DECIMAL},
      </if>
      <if test="dcIndividualOrInstitution != null" >
        #{dcIndividualOrInstitution,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendRatio != null" >
        #{dcDividendRatio,jdbcType=DECIMAL},
      </if>
      <if test="dcTaSerialNo != null" >
        #{dcTaSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="dcStampDuty != null" >
        #{dcStampDuty,jdbcType=DECIMAL},
      </if>
      <if test="dcFrozenBalance != null" >
        #{dcFrozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="dcTransferFee != null" >
        #{dcTransferFee,jdbcType=DECIMAL},
      </if>
      <if test="dcShareClass != null" >
        #{dcShareClass,jdbcType=VARCHAR},
      </if>
      <if test="dcFeeCalculator != null" >
        #{dcFeeCalculator,jdbcType=VARCHAR},
      </if>
      <if test="dcDrawBonusUnit != null" >
        #{dcDrawBonusUnit,jdbcType=DECIMAL},
      </if>
      <if test="dcFrozenSharesforReinvest != null" >
        #{dcFrozenSharesforReinvest,jdbcType=DECIMAL},
      </if>
      <if test="dcDividendType != null" >
        #{dcDividendType,jdbcType=VARCHAR},
      </if>
      <if test="dcOriginalAppSheetNo != null" >
        #{dcOriginalAppSheetNo,jdbcType=VARCHAR},
      </if>
      <if test="dcAchievementPay != null" >
        #{dcAchievementPay,jdbcType=DECIMAL},
      </if>
      <if test="dcAchievementCompen != null" >
        #{dcAchievementCompen,jdbcType=DECIMAL},
      </if>
      <if test="dcValidFlag != null" >
        #{dcValidFlag,jdbcType=VARCHAR},
      </if>
      <if test="dcErrorDec != null" >
        #{dcErrorDec,jdbcType=VARCHAR},
      </if>
      <if test="dcSendStatus != null" >
        #{dcSendStatus,jdbcType=VARCHAR},
      </if>
      <if test="dcGenerateStatus != null" >
        #{dcGenerateStatus,jdbcType=VARCHAR},
      </if>
      <if test="dcSendFileTime != null" >
        #{dcSendFileTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcGenerateFileTime != null" >
        #{dcGenerateFileTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcCtime != null" >
        #{dcCtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcUtime != null" >
        #{dcUtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcCuser != null" >
        #{dcCuser,jdbcType=VARCHAR},
      </if>
      <if test="dcUuser != null" >
        #{dcUuser,jdbcType=VARCHAR},
      </if>
      <if test="dcInContract != null" >
        #{dcInContract,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sams.custom.model.FundDividendCfm" >
    update D_FUND_DIVIDEND_CFM
    <set >
      <if test="dcChannelCode != null" >
        DC_CHANNEL_CODE = #{dcChannelCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTransDate != null" >
        DC_TRANS_DATE = #{dcTransDate,jdbcType=VARCHAR},
      </if>
      <if test="dcBasisForCalculaDivide != null" >
        DC_BASIS_FOR_CALCULA_DIVIDE = #{dcBasisForCalculaDivide,jdbcType=DECIMAL},
      </if>
      <if test="dcTransactionCfmDate != null" >
        DC_TRANSACTION_CFM_DATE = #{dcTransactionCfmDate,jdbcType=VARCHAR},
      </if>
      <if test="dcCurrencyType != null" >
        DC_CURRENCY_TYPE = #{dcCurrencyType,jdbcType=VARCHAR},
      </if>
      <if test="dcVolDivideReinvestment != null" >
        DC_VOL_DIVIDE_REINVESTMENT = #{dcVolDivideReinvestment,jdbcType=DECIMAL},
      </if>
      <if test="dcDividentDate != null" >
        DC_DIVIDENT_DATE = #{dcDividentDate,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendAmount != null" >
        DC_DIVIDEND_AMOUNT = #{dcDividendAmount,jdbcType=DECIMAL},
      </if>
      <if test="dcXrDate != null" >
        DC_XR_DATE = #{dcXrDate,jdbcType=VARCHAR},
      </if>
      <if test="dcConfirmedAmount != null" >
        DC_CONFIRMED_AMOUNT = #{dcConfirmedAmount,jdbcType=DECIMAL},
      </if>
      <if test="dcFundCode != null" >
        DC_FUND_CODE = #{dcFundCode,jdbcType=VARCHAR},
      </if>
      <if test="dcRegistrationDate != null" >
        DC_REGISTRATION_DATE = #{dcRegistrationDate,jdbcType=VARCHAR},
      </if>
      <if test="dcReturnCode != null" >
        DC_RETURN_CODE = #{dcReturnCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTransactionAccountId != null" >
        DC_TRANSACTION_ACCOUNT_ID = #{dcTransactionAccountId,jdbcType=VARCHAR},
      </if>
      <if test="dcDistributorCode != null" >
        DC_DISTRIBUTOR_CODE = #{dcDistributorCode,jdbcType=VARCHAR},
      </if>
      <if test="dcBusinessCode != null" >
        DC_BUSINESS_CODE = #{dcBusinessCode,jdbcType=VARCHAR},
      </if>
      <if test="dcTaAccountId != null" >
        DC_TA_ACCOUNT_ID = #{dcTaAccountId,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendPerUnit != null" >
        DC_DIVIDEND_PER_UNIT = #{dcDividendPerUnit,jdbcType=DECIMAL},
      </if>
      <if test="dcDefDividendMethod != null" >
        DC_DEF_DIVIDEND_METHOD = #{dcDefDividendMethod,jdbcType=VARCHAR},
      </if>
      <if test="dcDepositAcct != null" >
        DC_DEPOSIT_ACCT = #{dcDepositAcct,jdbcType=VARCHAR},
      </if>
      <if test="dcRegionCode != null" >
        DC_REGION_CODE = #{dcRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="dcDownloadDate != null" >
        DC_DOWNLOAD_DATE = #{dcDownloadDate,jdbcType=VARCHAR},
      </if>
      <if test="dcCharge != null" >
        DC_CHARGE = #{dcCharge,jdbcType=DECIMAL},
      </if>
      <if test="dcAgencyFee != null" >
        DC_AGENCY_FEE = #{dcAgencyFee,jdbcType=DECIMAL},
      </if>
      <if test="dcTotalFrozenVol != null" >
        DC_TOTAL_FROZEN_VOL = #{dcTotalFrozenVol,jdbcType=DECIMAL},
      </if>
      <if test="dcNav != null" >
        DC_NAV = #{dcNav,jdbcType=DECIMAL},
      </if>
      <if test="dcBranchCode != null" >
        DC_BRANCH_CODE = #{dcBranchCode,jdbcType=VARCHAR},
      </if>
      <if test="dcOtherFee1 != null" >
        DC_OTHER_FEE1 = #{dcOtherFee1,jdbcType=DECIMAL},
      </if>
      <if test="dcOtherFee2 != null" >
        DC_OTHER_FEE2 = #{dcOtherFee2,jdbcType=DECIMAL},
      </if>
      <if test="dcIndividualOrInstitution != null" >
        DC_INDIVIDUAL_OR_INSTITUTION = #{dcIndividualOrInstitution,jdbcType=VARCHAR},
      </if>
      <if test="dcDividendRatio != null" >
        DC_DIVIDEND_RATIO = #{dcDividendRatio,jdbcType=DECIMAL},
      </if>
      <if test="dcTaSerialNo != null" >
        DC_TA_SERIAL_NO = #{dcTaSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="dcStampDuty != null" >
        DC_STAMP_DUTY = #{dcStampDuty,jdbcType=DECIMAL},
      </if>
      <if test="dcFrozenBalance != null" >
        DC_FROZEN_BALANCE = #{dcFrozenBalance,jdbcType=DECIMAL},
      </if>
      <if test="dcTransferFee != null" >
        DC_TRANSFER_FEE = #{dcTransferFee,jdbcType=DECIMAL},
      </if>
      <if test="dcShareClass != null" >
        DC_SHARE_CLASS = #{dcShareClass,jdbcType=VARCHAR},
      </if>
      <if test="dcFeeCalculator != null" >
        DC_FEE_CALCULATOR = #{dcFeeCalculator,jdbcType=VARCHAR},
      </if>
      <if test="dcDrawBonusUnit != null" >
        DC_DRAW_BONUS_UNIT = #{dcDrawBonusUnit,jdbcType=DECIMAL},
      </if>
      <if test="dcFrozenSharesforReinvest != null" >
        DC_FROZEN_SHARESFOR_REINVEST = #{dcFrozenSharesforReinvest,jdbcType=DECIMAL},
      </if>
      <if test="dcDividendType != null" >
        DC_DIVIDEND_TYPE = #{dcDividendType,jdbcType=VARCHAR},
      </if>
      <if test="dcOriginalAppSheetNo != null" >
        DC_ORIGINAL_APP_SHEET_NO = #{dcOriginalAppSheetNo,jdbcType=VARCHAR},
      </if>
      <if test="dcAchievementPay != null" >
        DC_ACHIEVEMENT_PAY = #{dcAchievementPay,jdbcType=DECIMAL},
      </if>
      <if test="dcAchievementCompen != null" >
        DC_ACHIEVEMENT_COMPEN = #{dcAchievementCompen,jdbcType=DECIMAL},
      </if>
      <if test="dcValidFlag != null" >
        DC_VALID_FLAG = #{dcValidFlag,jdbcType=VARCHAR},
      </if>
      <if test="dcErrorDec != null" >
        DC_ERROR_DEC = #{dcErrorDec,jdbcType=VARCHAR},
      </if>
      <if test="dcSendStatus != null" >
        DC_SEND_STATUS = #{dcSendStatus,jdbcType=VARCHAR},
      </if>
      <if test="dcGenerateStatus != null" >
        DC_GENERATE_STATUS = #{dcGenerateStatus,jdbcType=VARCHAR},
      </if>
      <if test="dcSendFileTime != null" >
        DC_SEND_FILE_TIME = #{dcSendFileTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcGenerateFileTime != null" >
        DC_GENERATE_FILE_TIME = #{dcGenerateFileTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcCtime != null" >
        DC_CTIME = #{dcCtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcUtime != null" >
        DC_UTIME = #{dcUtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dcCuser != null" >
        DC_CUSER = #{dcCuser,jdbcType=VARCHAR},
      </if>
      <if test="dcUuser != null" >
        DC_UUSER = #{dcUuser,jdbcType=VARCHAR},
      </if>
       <if test="dcInContract != null" >
        DC_IN_CONTRACT = #{dcUuser,jdbcType=VARCHAR},
      </if>
    </set>
    where DC_ID = #{dcId,jdbcType=DECIMAL}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.sams.custom.model.FundDividendCfm" >
    update D_FUND_DIVIDEND_CFM
    set DC_CHANNEL_CODE = #{dcChannelCode,jdbcType=VARCHAR},
      DC_TRANS_DATE = #{dcTransDate,jdbcType=VARCHAR},
      DC_BASIS_FOR_CALCULA_DIVIDE = #{dcBasisForCalculaDivide,jdbcType=DECIMAL},
      DC_TRANSACTION_CFM_DATE = #{dcTransactionCfmDate,jdbcType=VARCHAR},
      DC_CURRENCY_TYPE = #{dcCurrencyType,jdbcType=VARCHAR},
      DC_VOL_DIVIDE_REINVESTMENT = #{dcVolDivideReinvestment,jdbcType=DECIMAL},
      DC_DIVIDENT_DATE = #{dcDividentDate,jdbcType=VARCHAR},
      DC_DIVIDEND_AMOUNT = #{dcDividendAmount,jdbcType=DECIMAL},
      DC_XR_DATE = #{dcXrDate,jdbcType=VARCHAR},
      DC_CONFIRMED_AMOUNT = #{dcConfirmedAmount,jdbcType=DECIMAL},
      DC_FUND_CODE = #{dcFundCode,jdbcType=VARCHAR},
      DC_REGISTRATION_DATE = #{dcRegistrationDate,jdbcType=VARCHAR},
      DC_RETURN_CODE = #{dcReturnCode,jdbcType=VARCHAR},
      DC_TRANSACTION_ACCOUNT_ID = #{dcTransactionAccountId,jdbcType=VARCHAR},
      DC_DISTRIBUTOR_CODE = #{dcDistributorCode,jdbcType=VARCHAR},
      DC_BUSINESS_CODE = #{dcBusinessCode,jdbcType=VARCHAR},
      DC_TA_ACCOUNT_ID = #{dcTaAccountId,jdbcType=VARCHAR},
      DC_DIVIDEND_PER_UNIT = #{dcDividendPerUnit,jdbcType=DECIMAL},
      DC_DEF_DIVIDEND_METHOD = #{dcDefDividendMethod,jdbcType=VARCHAR},
      DC_DEPOSIT_ACCT = #{dcDepositAcct,jdbcType=VARCHAR},
      DC_REGION_CODE = #{dcRegionCode,jdbcType=VARCHAR},
      DC_DOWNLOAD_DATE = #{dcDownloadDate,jdbcType=VARCHAR},
      DC_CHARGE = #{dcCharge,jdbcType=DECIMAL},
      DC_AGENCY_FEE = #{dcAgencyFee,jdbcType=DECIMAL},
      DC_TOTAL_FROZEN_VOL = #{dcTotalFrozenVol,jdbcType=DECIMAL},
      DC_NAV = #{dcNav,jdbcType=DECIMAL},
      DC_BRANCH_CODE = #{dcBranchCode,jdbcType=VARCHAR},
      DC_OTHER_FEE1 = #{dcOtherFee1,jdbcType=DECIMAL},
      DC_OTHER_FEE2 = #{dcOtherFee2,jdbcType=DECIMAL},
      DC_INDIVIDUAL_OR_INSTITUTION = #{dcIndividualOrInstitution,jdbcType=VARCHAR},
      DC_DIVIDEND_RATIO = #{dcDividendRatio,jdbcType=DECIMAL},
      DC_TA_SERIAL_NO = #{dcTaSerialNo,jdbcType=VARCHAR},
      DC_STAMP_DUTY = #{dcStampDuty,jdbcType=DECIMAL},
      DC_FROZEN_BALANCE = #{dcFrozenBalance,jdbcType=DECIMAL},
      DC_TRANSFER_FEE = #{dcTransferFee,jdbcType=DECIMAL},
      DC_SHARE_CLASS = #{dcShareClass,jdbcType=VARCHAR},
      DC_FEE_CALCULATOR = #{dcFeeCalculator,jdbcType=VARCHAR},
      DC_DRAW_BONUS_UNIT = #{dcDrawBonusUnit,jdbcType=DECIMAL},
      DC_FROZEN_SHARESFOR_REINVEST = #{dcFrozenSharesforReinvest,jdbcType=DECIMAL},
      DC_DIVIDEND_TYPE = #{dcDividendType,jdbcType=VARCHAR},
      DC_ORIGINAL_APP_SHEET_NO = #{dcOriginalAppSheetNo,jdbcType=VARCHAR},
      DC_ACHIEVEMENT_PAY = #{dcAchievementPay,jdbcType=DECIMAL},
      DC_ACHIEVEMENT_COMPEN = #{dcAchievementCompen,jdbcType=DECIMAL},
      DC_VALID_FLAG = #{dcValidFlag,jdbcType=VARCHAR},
      DC_ERROR_DEC = #{dcErrorDec,jdbcType=VARCHAR},
      DC_SEND_STATUS = #{dcSendStatus,jdbcType=VARCHAR},
      DC_GENERATE_STATUS = #{dcGenerateStatus,jdbcType=VARCHAR},
      DC_SEND_FILE_TIME = #{dcSendFileTime,jdbcType=TIMESTAMP},
      DC_GENERATE_FILE_TIME = #{dcGenerateFileTime,jdbcType=TIMESTAMP},
      DC_CTIME = #{dcCtime,jdbcType=TIMESTAMP},
      DC_UTIME = #{dcUtime,jdbcType=TIMESTAMP},
      DC_CUSER = #{dcCuser,jdbcType=VARCHAR},
      DC_UUSER = #{dcUuser,jdbcType=VARCHAR},
      DC_IN_CONTRACT = #{dcInContract,jdbcType=VARCHAR}
    where DC_ID = #{dcId,jdbcType=DECIMAL}
  </update>
  
  <update id="updateGenerateStaAndTime" parameterType="hashMap">
  	update D_FUND_DIVIDEND_CFM set DC_GENERATE_STATUS = '01' ,DC_GENERATE_FILE_TIME = sysdate where DC_channel_code = #{CHANNELCODE,jdbcType = VARCHAR} AND DC_TRANSACTION_cfm_DATE = #{TRANSDATE,jdbcType = VARCHAR}
  </update>
  
  <update id="updateSendStaAndTime" parameterType="hashMap">
  	update D_FUND_DIVIDEND_CFM set DC_SEND_STATUS = '01' , DC_SEND_FILE_TIME = sysdate where DC_channel_code = #{CHANNELCODE,jdbcType = VARCHAR} AND DC_TRANSACTION_cfm_DATE = #{TRANSDATE,jdbcType = VARCHAR} and DC_GENERATE_STATUS = '01'
  </update>
  
  <select id="selectfundDividendCfm" parameterType="hashMap" resultType="hashMap">
  	select 
    ${SQLNAME}
    from D_FUND_DIVIDEND_CFM
    where 1=1
    <if test="CHANNELCODE != null" >
      AND  DC_CHANNEL_CODE=#{CHANNELCODE,jdbcType=VARCHAR}
    </if>
    <if test="TRANSDATE != null" >
      AND  DC_TRANSACTION_CFM_DATE=#{TRANSDATE,jdbcType=VARCHAR}
    </if>
    order by  dc_fund_code,dc_transaction_account_id
  </select>
  
  
  <resultMap id="ProfitMap" type="com.sams.custom.model.ParticipationProfit" >
    <result column="CHANNELCODE" property="channelCode" jdbcType="VARCHAR" />
    <result column="CHANNELNAME" property="channelName" jdbcType="VARCHAR" />
    <result column="PROFITNATURE" property="profitNature" jdbcType="VARCHAR" />
    <result column="APPLICATIONAMOUNT" property="applicationAmount" jdbcType="VARCHAR" />
    <result column="EARNINGSAMOUNT" property="earningsAmount" jdbcType="VARCHAR" />
    <result column="TOTALAMOUNT" property="totalAmount" jdbcType="VARCHAR" />
    <result column="FUNDCODE" property="fundCode" jdbcType="VARCHAR" />
    <result column="TAACCOUNTID" property="taAccountId" jdbcType="VARCHAR" />
    <result column="INVESTORNAME" property="investorName" jdbcType="VARCHAR" />
    <result column="CERTIFICATENO" property="certificateno" jdbcType="VARCHAR" />
    <result column="INCONTRACT" property="inContract" jdbcType="VARCHAR" />
    <result column="ORIGINALSERIALNO" property="originalSerialNo" jdbcType="VARCHAR" />
    <result column="PRODUCTTYPE" property="productType" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectTransProfitList" parameterType="map" resultMap="ProfitMap">
	 select t.channelcode, 
	 t.fundcode, 
	 t.producttype,
	 max(t.channelname) as channelname , 
	 sum(t.totalamount) as totalamount, 
	 sum(t.applicationvol) as applicationamount , 
	 sum(t.totalamount - t.applicationvol) as earningsamount 
	 from (select erc_channel_code as channelcode, 
	 	ci.ci_channel_name as channelname, 
	 	erc_confirmed_amount as totalamount, 
	 	erc_fund_code as fundcode, 
	 	erc_application_vol applicationvol,
	 	(select t.pi_product_type from p_product_info t where t.pi_channel_product_code = erc_fund_code and t.pi_channel_code = erc_channel_code and t.pi_valid_flag not in ('00','99') and t.pi_check_state = '01') as producttype,
	 	erc_ta_account_id as taaccountid , 
	 	erc_transaction_cfm_date, 
	 	erc_app_sheet_serial_no 
	 	from d_exchange_req_cfm erc, p_channel_info ci where (erc.erc_channel_code = ci.ci_channel_code and erc_business_code in ('142', '150') and erc_transaction_cfm_date = #{date,jdbcType = VARCHAR} and erc_channel_code IN 
     	<foreach collection="channelCodeList" item="channelCode" index="index" open="(" close=")" separator=",">
      		#{channelCode}
    	 </foreach>
     ) ) t GROUP BY t.channelcode, t.fundcode,t.producttype
     order by t.channelcode
  </select>
  
  <select id="selectDividendList" parameterType="map" resultMap="ProfitMap">
  	select DC_CHANNEL_CODE channelcode,max(ci.ci_channel_name) channelName ,sum(DC_DIVIDEND_AMOUNT) earningsAmount,sum(DC_DIVIDEND_AMOUNT) totalAmount, DC_FUND_CODE FUNDCODE from d_fund_dividend_cfm fdc ,p_channel_info ci where fdc.dc_channel_code = ci.ci_channel_code
	 and dc_business_code = '143' and dc_transaction_cfm_date = #{date,jdbcType = VARCHAR} 
	 AND dc_channel_code IN  
	 <foreach collection="channelCodeList" item="channelCode" index="index" open="(" close=")" separator=",">
      	#{channelCode}
     </foreach>
	 group by dc_channel_code,dc_fund_code
	 order by dc_channel_code
  </select>
  
  <select id="selectTransProfitDetail" parameterType="map" resultMap="ProfitMap">
  select t.*,
       t.applicationamount as applicationamount,
       t.totalamount - t.applicationamount as earningsamount
  from (select distinct t1.*,
                        t2.er_application_amount,
                        t2.er_in_contract        as incontract,
                        t2.er_original_serial_no as originalserialno
          from (select erc_channel_code         as channelcode,
                       ci.ci_channel_name       as channelname,
                       erc_confirmed_amount     as totalamount,
                       erc_fund_code            as fundcode,
                       erc_ta_account_id        as taaccountid,
					   erc_application_vol as applicationamount,
                       erc_transaction_cfm_date,
                       das.as_investor_name     as investorname,
                       das.as_certificate_no    as certificateno,
                       erc_app_sheet_serial_no
                  from d_exchange_req_cfm erc,
                       p_channel_info     ci,
                       d_account_stat     das
                 where (erc.erc_channel_code = ci.ci_channel_code and
                       erc.erc_ta_account_id = das.as_ta_account_id and
                       erc.erc_channel_code = das.as_channel_code and
                       erc.erc_transaction_account_id =
                       das.as_transaction_account_id and
                       erc_business_code in ('142', '150') and
                       erc_transaction_cfm_date = #{date,jdbcType = VARCHAR} and
                       erc_fund_code = #{fundCode,jdbcType = VARCHAR} and
                       erc_channel_code = #{channelCode,jdbcType = VARCHAR})) t1
          left join d_exchange_req t2
            on t2.er_app_sheet_serial_no = t1.erc_app_sheet_serial_no
           and t1.taaccountid = t2.er_ta_account_id
           and t1.fundcode = t2.er_fund_code
           and t1.channelcode = t2.er_channel_code) t
  </select>
  
  <select id="selectDividendDetail" parameterType="map" resultMap="ProfitMap">
  select dc_dividend_amount earningsamount,dc_fund_code fundcode,dc_channel_code channelcode,dc_ta_account_id taaccountid ,das.as_investor_name investorname, das.as_certificate_no certificateno,fdc.dc_in_contract incontract from d_fund_dividend_cfm fdc, d_account_stat das  where fdc.dc_ta_account_id = das.as_ta_account_id and fdc.dc_channel_code = das.as_channel_code and fdc.dc_transaction_account_id = das.as_transaction_account_id
	 and dc_business_code = '143' 
	 and dc_transaction_cfm_date = #{date,jdbcType = VARCHAR}
	 and dc_channel_code = #{channelCode,jdbcType = VARCHAR}
	 and dc_fund_code = #{fundCode,jdbcType = VARCHAR} 
  </select>
  
  <select id="queryfundDividendInfo" parameterType="java.util.Map"  resultType="java.util.Map">
  	select T.DC_CHANNEL_CODE CHANNELCODE,
       (SELECT TT.CI_CHANNEL_NAME
          FROM P_CHANNEL_INFO TT
         WHERE TT.CI_CHANNEL_CODE = T.DC_CHANNEL_CODE
           AND ROWNUM = 1) CHANNELNAME,
		 T.DC_TRANSACTION_CFM_DATE TRANSACTIONCFMDATE,
		 T.DC_CURRENCY_TYPE CURRENCYTYPE,
		 T.DC_DIVIDENT_DATE DIVIDENTDATE,
		 T.DC_DIVIDEND_AMOUNT DIVIDENDAMOUNT,
		 T.DC_XR_DATE XRDATE,
		 T.DC_FUND_CODE FUNDCODE,
		 T.DC_REGISTRATION_DATE REGISTRATIONDATE,
		 T.DC_TRANSACTION_ACCOUNT_ID TRANSACTIONACCOUNTID,
		 T.DC_DISTRIBUTOR_CODE DISTRIBUTORCODE,
		 T.DC_TA_ACCOUNT_ID TAACCOUNTID,
		 T.DC_BRANCH_CODE BRANCHCODE,
		 T.DC_TA_SERIAL_NO TASERIALNO,
		 T.DC_DRAW_BONUS_UNIT DRAWBONUSUNIT				 
 		 from d_fund_dividend_cfm t WHERE 1=1 
  		<if test="condition.channelCode != null and condition.channelCode != '' ">
		  	AND T.dC_CHANNEL_CODE = #{condition.channelCode,jdbcType = VARCHAR}
		  </if>
		 <if test="condition.productCode != null and condition.productCode != '' ">
		  	AND T.dC_FUND_CODE = #{condition.productCode,jdbcType = VARCHAR}
		  </if>
		  <if test="condition.transactionAacountId != null and condition.transactionAacountId != '' ">
		  	AND LOWER(T.dC_TRANSACTION_ACCOUNT_ID) like ('%'|| lower(#{condition.transactionAacountId,jdbcType = VARCHAR}) ||'%')
		  </if>
		  <if test="condition.transDate != null and condition.transDate != '' ">
		  	AND T.DC_TRANS_DATE = replace(#{condition.transDate,jdbcType = VARCHAR},'-','')
		  </if>
		  <if test="condition.taAccountId != null and condition.taAccountId != '' ">
		  	AND LOWER(T.dC_TA_ACCOUNT_ID) like ('%'|| lower(#{condition.taAccountId,jdbcType = VARCHAR}) ||'%')
		  </if>
		  ORDER BY T.dC_TRANS_DATE DESC
  </select>
  
  
  <select id="queryDividendSamsSerialnoCount" parameterType="map" resultType="integer">
  	  select count(*)
      from d_fund_dividend_cfm t
      where t.dc_channel_code = #{CHANNELCODE,jdbcType = VARCHAR}
      and t.dc_trans_date = #{TRANSDATE,jdbcType = VARCHAR}
      group by t.dc_channel_code, t.dc_ta_serial_no
      having count(*) > 1
  </select>
    <select id="selectByTransactionAccountID" resultMap="BaseResultMap">
        select * from d_fund_dividend_cfm where
        DC_TRANSACTION_ACCOUNT_ID = #{transactionAccountID}
        and DC_FUND_CODE = #{fundCode}
        and DC_TRANS_DATE = #{transDate}
        and DC_CHANNEL_CODE = #{channelCode}
    </select>
</mapper>