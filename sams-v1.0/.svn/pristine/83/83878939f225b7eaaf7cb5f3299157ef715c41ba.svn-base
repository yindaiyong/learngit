<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sams.custom.mapper.ProcessStepInfoMapper" >
  <resultMap id="BaseResultMap" type="com.sams.custom.model.ProcessStepInfo" >
    <id column="PSI_ID" property="psiId" jdbcType="DECIMAL" />
    <result column="PSI_FLOW_CODE" property="psiFlowCode" jdbcType="VARCHAR" />
    <result column="PSI_PROCESS_CODE" property="psiProcessCode" jdbcType="VARCHAR" />
    <result column="PSI_PACKAGE_NAME" property="psiPackageName" jdbcType="VARCHAR" />
    <result column="PSI_CLASS_NAME" property="psiClassName" jdbcType="VARCHAR" />
    <result column="PSI_METHOD_NAME" property="psiMethodName" jdbcType="VARCHAR" />
    <result column="PSI_INPUT_PARAM" property="psiInputParam" jdbcType="VARCHAR" />
    <result column="PSI_OUTPUT_PARAM" property="psiOutputParam" jdbcType="VARCHAR" />
    <result column="PSI_INPUT_STRONG_PARAM" property="psiInputStrongParam" jdbcType="VARCHAR" />
    <result column="PSI_OUTPUT_STRONG_PARAM" property="psiOutputStrongParam" jdbcType="VARCHAR" />
    <result column="PSI_PROCESS_STEP" property="psiProcessStep" jdbcType="VARCHAR" />
    <result column="PSI_CTIME" property="psiCtime" jdbcType="TIMESTAMP" />
    <result column="PSI_UTIME" property="psiUtime" jdbcType="TIMESTAMP" />
    <result column="PSI_CUSER" property="psiCuser" jdbcType="VARCHAR" />
    <result column="PSI_UUSER" property="psiUuser" jdbcType="VARCHAR" />
    <result column="PSI_PROCESS_NAME" property="psiProcessName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="BaseSteptMap" type="com.sams.custom.model.ProcessingState" >
    <id column="PS_ID" property="psId" jdbcType="DECIMAL" />
    <result column="PS_PROCESS_CODE" property="psProcessCode" jdbcType="VARCHAR" />
    <result column="PS_CHANNEL_CODE" property="psChannelCode" jdbcType="VARCHAR" />
    <result column="PS_BRANCH_CODE" property="psBranchCode" jdbcType="VARCHAR" />
    <result column="PS_PROCESS_STEP" property="psProcessStep" jdbcType="VARCHAR" />
    <result column="PS_PROCESS_START" property="psProcessStart" jdbcType="VARCHAR" />
    <result column="PS_PROCESS_START_TIME" property="psProcessStartTime" jdbcType="VARCHAR" />
    <result column="PS_PROCESS_END_TIME" property="psProcessEndTime" jdbcType="VARCHAR" />
    <result column="PS_PROCESS_DEC" property="psProcessDec" jdbcType="VARCHAR" />
    <result column="PS_BUSINESS_DATE" property="psBusinessDate" jdbcType="VARCHAR" />
    <result column="PS_ERROR_CODE" property="psErrorCode" jdbcType="VARCHAR" />
    <result column="PS_CTIME" property="psCtime" jdbcType="TIMESTAMP" />
    <result column="PS_UTIME" property="psUtime" jdbcType="TIMESTAMP" />
    <result column="PS_CUSER" property="psCuser" jdbcType="VARCHAR" />
    <result column="PS_UUSER" property="psUuser" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="MarketHandingMap" type="com.sams.custom.model.result.MarketHandingResult" extends="BaseSteptMap">
       <result column="ci_channel_name" property="ciChannelName"  jdbcType="VARCHAR"/>
       <result column="ci_channel_code" property="ciChannelCode"  jdbcType="VARCHAR"/>
       <result column="re_error_message" property="reErrorMessage"  jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    PSI_ID, PSI_FLOW_CODE, PSI_PROCESS_CODE, PSI_PACKAGE_NAME, PSI_CLASS_NAME, PSI_METHOD_NAME, 
    PSI_INPUT_PARAM, PSI_OUTPUT_PARAM, PSI_INPUT_STRONG_PARAM, PSI_OUTPUT_STRONG_PARAM, 
    PSI_PROCESS_STEP, PSI_CTIME, PSI_UTIME, PSI_CUSER, PSI_UUSER, PSI_PROCESS_NAME
  </sql>
  
  
  <select id="selectByFlowCode" resultMap="BaseResultMap" parameterType="com.sams.custom.model.ProcessStepInfo" >
    select 
    <include refid="Base_Column_List" />
	  from p_process_step_info t where 
	  t.psi_flow_code= #{psiFlowCode,jdbcType=VARCHAR}
	  <if test="specialFile != null and specialFile != '' ">
	  	and psi_file_type like '%' || #{specialFile,jdbcType = VARCHAR} || '%'
	  </if>
	  <if test=' operType != null and operType == "1" and psiProcessStep != null and psiProcessStep != ""  '>
         and to_number(PSI_PROCESS_STEP) &gt; to_number(#{psiProcessStep,jdbcType=VARCHAR})
      </if>
      <if test=' operType != null and operType == "0" and psiProcessStep != null and psiProcessStep != ""  '>
         and to_number(PSI_PROCESS_STEP) &gt;= to_number(#{psiProcessStep,jdbcType=VARCHAR})
      </if>
	  order by t.psi_process_step asc
  </select> 
  
  <select id="selectStepInfo" resultMap="BaseResultMap" parameterType="HashMap"  >
    select 
    <include refid="Base_Column_List" />
	  from p_process_step_info t where 
	  t.psi_flow_code= #{flowCode,jdbcType=VARCHAR}
      and to_number(psi_process_step) = to_number(#{stepCode,jdbcType=VARCHAR})
  </select> 
  
   <select id="processStepInfo" resultMap="MarketHandingMap" parameterType="HashMap" >
			   select *
			 from (select *
			         from d_processing_state d
			         left join d_runing_error c
			           on d.ps_error_code = c.re_error_code
			        where d.ps_channel_code = #{CHANNELCODE,jdbcType=VARCHAR}
			          and d.ps_branch_code = '000000'
			          and d.ps_business_date = #{TRANSDATE,jdbcType=VARCHAR}
			        order by d.ps_process_start_time desc, d.ps_process_code desc)
			where rownum &lt; 2
  </select>
  
 <resultMap id="DayEndMap" type="com.sams.custom.model.DayEndProcessor" >
 	<id column="ID" property="Id" jdbcType="DECIMAL" />
    <result column="CHANNELCODE" property="channelCode" jdbcType="VARCHAR" />
    <result column="CHANNELNAME" property="channelName" jdbcType="VARCHAR" />
    <result column="ACCOUNTSUCCESS" property="accountSuccess" jdbcType="VARCHAR" />
    <result column="ACCOUNTFAILED" property="accountFailed" jdbcType="VARCHAR" />
    <result column="TRANSSUCCESS" property="transSuccess" jdbcType="VARCHAR" />
    <result column="TRANSFAILED" property="transFailed" jdbcType="VARCHAR" />
    <result column="CURRENTDATE" property="currentDate" jdbcType="VARCHAR" />
    <result column="PROCESSSTATNAME" property="processStatName" jdbcType="VARCHAR" />
    <result column="PROCESSSTEPNAME" property="processStepName" jdbcType="VARCHAR" />
    <result column="ERRORMESSAGE" property="errorMessage" jdbcType="VARCHAR" />
    <result column="BRANCHCODE" property="branchCode" jdbcType="VARCHAR" />
    <result column="PROCESSSTEP" property="processStep" jdbcType="VARCHAR" />
    <result column="BUSINESSDATE" property="businessDate" jdbcType="VARCHAR" />
    <result column="MAXPROCESSSTEP" property="maxProcessStep" jdbcType="VARCHAR" />
    
    <result column="CONFIRMPROCESSSTATNAME" property="confirmProcessStatName" jdbcType="VARCHAR" />
    <result column="CONFIRMPROCESSSTEPNAME" property="confirmProcessStepName" jdbcType="VARCHAR" />
    <result column="CONFIRMERRORMESSAGE" property="confirmErrorMessage" jdbcType="VARCHAR" />
    <result column="CONFIRMBRANCHCODE" property="confirmBranchCode" jdbcType="VARCHAR" />
    <result column="CONFIRMPROCESSSTEP" property="confirmProcessStep" jdbcType="VARCHAR" />
    <result column="MAXCONFIRMPROCESSSTEP" property="maxConfirmProcessStep" jdbcType="VARCHAR" />
    
    <result column="SENDBRANCHCODE" property="sendBranchCode" jdbcType="VARCHAR" />
    <result column="SENDPROCESSSTAT" property="sendProcessStat" jdbcType="VARCHAR" />
    <result column="SENDPROCESSSTATNAME" property="sendProcessStatName" jdbcType="VARCHAR" />
    <result column="SENDPROCESSSTEP" property="sendProcessStep" jdbcType="VARCHAR" />
    <result column="SENDPROCESSSTEPNAME" property="sendProcessStepName" jdbcType="VARCHAR" />
    <result column="SENDERRORMESSAGE" property="sendErrorMessage" jdbcType="VARCHAR" />
    
    <result column="PROCESSSTARTTIME" property="processStartTime" jdbcType="VARCHAR" />
    <result column="USERNAME" property="userName" jdbcType="VARCHAR" />
 </resultMap>

<select id="queryStepInfo" parameterType ="Map" resultMap = "DayEndMap">
	SELECT tt.channelcode,
	 tt.channelname,
	 tt.accountsuccess,
	 tt.accountfailed,
	 tt.transsuccess ,
	 tt.transfailed,
	 tt.branchcode,
	 tt.processstep,
	 tt.processstepname,
	 tt.processstat,
	 tt.processstatname,
	 tt.errormessage ,
	 tt.maxprocessstep,
	 nvl(tt.username, ttt.username) AS username ,
	 nvl(tt.businessdate, ttt.businessdate) AS businessdate ,
	 nvl(tt.processstarttime, ttt.processstarttime) AS processstarttime,
	 ttt.confirmbranchcode ,
	 ttt.confirmprocessstat,
	 ttt.confirmprocessstep,
	 ttt.confirmprocessstatname,
	 ttt.confirmprocessstepname,
	 ttt.maxconfirmprocessstep,
	 ttt.confirmerrormessage,
	 tttt.sendbranchcode,
	 tttt.sendprocessstat,
	 tttt.sendprocessstatname,
	 tttt.sendprocessstep,
	 tttt.sendprocessstepname,
	 tttt.senderrormessage
	 
	  FROM ( 
		 SELECT t.channelcode,
		 t.channelName,
		 t.accountSuccess,
	     t.accountFailed,
	     t.transSuccess ,
	     t.transFailed,
	     t.maxprocessstep,
	     c.branchcode AS branchcode,
	     c.processstat AS processstat,
	     c.processstep AS processstep,
	     c.processstatname AS processstatname ,
	     c.processname AS processstepname,
	     c.errorMessage AS errormessage,
	     c.userName AS userName,
	     c.businessdate,
	     c.processStartTime FROM (
	     	 SELECT DISTINCT t.CI_CHANNEL_CODE AS CHANNELCODE,
	     	 t.CI_CHANNEL_NAME AS channelName ,																				<!--20200114   交易成功数查最终状态  如果处理步骤停在中间，交易成功数与失败数之和与申请总数不一致-->
	     	 ( SELECT COUNT(1) FROM d_account_req WHERE (ar_channel_code = t.ci_channel_code AND ar_return_code = '0000' AND ar_trans_date = #{condition.transDate,jdbcType = VARCHAR}) ) AS accountSuccess ,
	     	 ( SELECT COUNT(1) FROM d_account_req WHERE (ar_channel_code = t.ci_channel_code AND ar_return_code &lt;&gt; '0000' AND ar_trans_date = #{condition.transDate,jdbcType = VARCHAR}) ) AS accountFailed ,
	     	 ( SELECT COUNT(1) FROM d_exchange_req WHERE (er_channel_code = t.ci_channel_code AND ER_RETURN_CODE = '0000' and er_ta_trans_status in('442','434','041') AND ER_TRANS_DATE = #{condition.transDate,jdbcType = VARCHAR}) ) AS transSuccess ,
	     	 ( SELECT COUNT(1) FROM d_exchange_req WHERE (er_channel_code = t.ci_channel_code AND ER_RETURN_CODE &lt;&gt; '0000' and er_trans_date = #{condition.transDate,jdbcType = VARCHAR}) ) AS transFailed ,
	     	 (select max(psi_process_step)  from P_PROCESS_STEP_INFO where psi_flow_code = #{branchCode,jdbcType = VARCHAR}) as maxprocessstep
	     	 FROM p_channel_info t WHERE t.CI_VALID_FLAG = '01' AND t.CI_CHECK_STATE = '01' ) T LEFT JOIN (select * from (SELECT t.ps_id AS id,
       t.ps_channel_code AS channelcode,
       t.ps_branch_code AS branchcode,
       t.ps_process_start AS processStat,
       t1.psi_process_step AS processstep,
       t.ps_process_start_time AS processstartTime,
       t.ps_cuser AS userName,
       (select max(psi_process_step)  from P_PROCESS_STEP_INFO where psi_flow_code = #{branchCode,jdbcType = VARCHAR}) as maxprocessstep,
       CASE t.ps_process_start
         WHEN '01' THEN
          '成功'
         WHEN '00' THEN
          '失败'
       END AS processstatName,
       t.ps_process_dec AS processname,
       ps_business_date AS businessdate,
       t2.re_error_message AS errorMessage,
       t.ps_process_start_time AS processtatrttime,
			 row_number() OVER(PARTITION BY t.ps_channel_code ORDER BY t.ps_PROCESS_START_TIME DESC,T.PS_PROCESS_STEP DESC) AS row_number
  FROM D_PROCESSING_STATE t
 INNER JOIN P_PROCESS_STEP_INFO t1
    ON t.ps_branch_code = t1.psi_flow_code
   AND t1.psi_process_code = t.ps_process_code
  LEFT JOIN d_runing_error t2
    ON t2.re_error_code = t.ps_error_code
 WHERE t.ps_branch_code = #{branchCode,jdbcType = VARCHAR}
   AND ps_business_date = #{condition.transDate,jdbcType = VARCHAR}) aa where row_number = 1 ) c ON T.CHANNELCODE = c.Channelcode ) tt 
	INNER JOIN ( SELECT t.channelcode, t.channelName, c.branchcode AS confirmbranchcode, c.processstat AS confirmprocessstat, c.processstep AS confirmprocessstep , c.processstatname AS confirmprocessstatname, c.processname AS confirmprocessstepname, c.errorMessage AS confirmerrormessage, c.userName AS userName, c.businessdate , c.processStartTime,(select max(psi_process_step)  from P_PROCESS_STEP_INFO where psi_flow_code = #{confirmBranchCode,jdbcType = VARCHAR}) as maxconfirmprocessstep FROM ( SELECT DISTINCT t.CI_CHANNEL_CODE AS CHANNELCODE, t.CI_CHANNEL_NAME AS channelName FROM p_channel_info t WHERE t.CI_VALID_FLAG = '01' AND t.CI_CHECK_STATE = '01' ) T LEFT JOIN (select * from (SELECT t.ps_id AS id,
       t.ps_channel_code AS channelcode,
       t.ps_branch_code AS branchcode,
       t.ps_process_start AS processStat,
       t1.psi_process_step AS processstep,
       t.ps_process_start_time AS processstartTime,
       t.ps_cuser AS userName,
       CASE t.ps_process_start
         WHEN '01' THEN
          '成功'
         WHEN '00' THEN
          '失败'
       END AS processstatName,
       t.ps_process_dec AS processname,
       ps_business_date AS businessdate,
       t2.re_error_message AS errorMessage,
       t.ps_process_start_time AS processtatrttime,
			 row_number() OVER(PARTITION BY t.ps_channel_code ORDER BY t.ps_PROCESS_START_TIME DESC,T.PS_PROCESS_STEP DESC) AS row_number
  FROM D_PROCESSING_STATE t
 INNER JOIN P_PROCESS_STEP_INFO t1
    ON t.ps_branch_code = t1.psi_flow_code
   AND t1.psi_process_code = t.ps_process_code
  LEFT JOIN d_runing_error t2
    ON t2.re_error_code = t.ps_error_code
 WHERE t.ps_branch_code = #{confirmBranchCode,jdbcType = VARCHAR}
   AND ps_business_date = #{condition.transDate,jdbcType = VARCHAR}) aa where row_number = 1) c ON T.CHANNELCODE = c.Channelcode ) ttt ON tt.channelcode = ttt.channelcode 
   INNER JOIN ( SELECT t.channelcode, t.channelName, c.branchcode AS sendbranchcode, c.processstat AS sendprocessstat, c.processstatname AS sendprocessstatname , c.processstep AS sendProcessstep,c.processname AS sendprocessstepname, c.errorMessage AS senderrormessage, c.userName AS userName, c.businessdate, c.processStartTime FROM ( SELECT DISTINCT t.CI_CHANNEL_CODE AS CHANNELCODE, t.CI_CHANNEL_NAME AS channelName FROM p_channel_info t WHERE t.CI_VALID_FLAG = '01' AND t.CI_CHECK_STATE = '01' ) T LEFT JOIN ( SELECT * FROM ( SELECT t.ps_id AS id, t.ps_channel_code AS channelcode, t.ps_branch_code AS branchcode, t.ps_process_start AS processStat, t.ps_process_start_time AS processstartTime , t.ps_cuser AS userName , CASE t.ps_process_start WHEN '01' THEN '成功' WHEN '00' THEN '失败' END AS processstatName,t.PS_PROCESS_STEP as processstep, t.ps_process_dec AS processname, ps_business_date AS businessdate, t2.re_error_message AS errorMessage, t.ps_process_start_time AS processtatrttime , row_number() OVER (PARTITION BY t.ps_channel_code ORDER BY t.ps_PROCESS_START_TIME DESC,T.PS_PROCESS_STEP DESC) AS row_number FROM D_PROCESSING_STATE t INNER JOIN P_PROCESS_STEP_INFO t1 ON t.ps_branch_code = t1.psi_flow_code AND t1.psi_process_code = t.ps_process_code LEFT JOIN d_runing_error t2 ON t2.re_error_code = t.ps_error_code WHERE t.ps_branch_code = #{sendBranchCode} AND ps_business_date = #{condition.transDate,jdbcType = VARCHAR} ) aa WHERE row_number = 1 ) c ON T.CHANNELCODE = c.Channelcode ) tttt ON tt.channelcode = tttt.channelcode
   <where>
	   <if test="condition.dataProcessState != null and condition.dataProcessState !=''">
		   <choose>
	        <when test='condition.dataProcessState == "02"'>
	            tt.processstat is null
	        </when>
	        <otherwise>
	            tt.processstat = #{condition.dataProcessState,jdbcType = VARCHAR}
	        </otherwise>
	    	</choose>
	   </if>
	   <if test="condition.confirmProcessState != null and condition.confirmProcessState !=''">
	   		<choose>
	        <when test='condition.confirmProcessState == "02"'>
	            and ttt.confirmProcessstat is null
	        </when>
	        <otherwise>
	            and ttt.confirmProcessstat = #{condition.confirmProcessState,jdbcType = VARCHAR}
	        </otherwise>
	    	</choose>
	   </if>
	   <if test="condition.sendProcessState != null and condition.sendProcessState !=''">
	   <choose>
	        <when test='condition.sendProcessState == "02"'>
	            and tttt.sendProcessstat is null
	        </when>
	        <otherwise>
	            and tttt.sendProcessstat = #{condition.sendProcessState,jdbcType = VARCHAR}
	        </otherwise>
	    	</choose>
	   </if>
	   <if test="condition.channelCode != null and condition.channelCode !=''">
	   		and tt.channelCode = #{condition.channelCode,jdbcType = VARCHAR}
	   </if>
   </where>
   order by to_number(tt.processstat), to_number(ttt.confirmProcessstat),to_number(tttt.sendProcessstat)
	</select>

<select id="selectCurrentHandelDate" resultType="String" parameterType="String">
	select dt_current_date currentDate from d_dayend_transdate where dt_channel_code = #{channelCode,jdbcType = VARCHAR}
</select>

<select id="queryDiffValueForMaxToLastStep" parameterType="Map" resultType="Map">
		SELECT tt.step,TT.STAT
  		FROM (select (SELECT MAX(PP.PSI_PROCESS_STEP)
                  FROM P_PROCESS_STEP_INFO PP
                 WHERE PP.PSI_FLOW_CODE = T.PS_BRANCH_CODE) -
               T.PS_PROCESS_STEP STEP,T.PS_PROCESS_START STAT
          from d_processing_state t
         where t.ps_channel_code = #{CHANNELCODE,jdbcType = VARCHAR}
           AND T.PS_BRANCH_CODE = '111111'
           AND T.PS_BUSINESS_DATE = #{TRANSDATE,jdbcType = VARCHAR}
         ORDER BY T.PS_PROCESS_START_TIME DESC, T.PS_PROCESS_STEP DESC) TT
 	WHERE ROWNUM = 1
		
</select>
</mapper>