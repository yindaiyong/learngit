<template>
    <div style="width:100%">
        <div class="search-wrap">
            <el-form size="mini" :model="businessForm" :rules="businessFormRules" ref= "businessForm" :inline="true">
                <el-form-item label="期次" prop="periodCode">
                    <el-select  v-model="businessForm.periodCode" style="width:110px;" clearable @change="changePeriod()" @focus = "focusPeriod()">
                        <el-option
                            v-for="item in periods"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="批次" prop="batchCode">
                    <el-select v-model="businessForm.batchCode" style="width:110px;" clearable>
                        <el-option
                            v-for="item in batchs"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="上传日期">
                    <el-date-picker
                    v-model="businessForm.uploadStartData"
                    type="date"
                    placeholder="选择日期"
                    value-format="yyyy-MM-dd"
                    style="width:170px;"
                    clearable
                    ></el-date-picker>
                    ~
                    <el-date-picker
                    v-model="businessForm.uploadEndData"
                    type="date"
                    placeholder="选择日期"
                    value-format="yyyy-MM-dd"
                    style="width:170px;"
                    clearable
                    ></el-date-picker>
                </el-form-item>
                <el-form-item label="文件名">
                    <el-input v-model="businessForm.fileName" placeholder="请输入文件名" style="width:240px;"></el-input>
                </el-form-item>
                <el-form-item label="状态" prop="checkProcess">
                    <el-select v-model="businessForm.checkProcess" style="width:110px;" clearable >
                        <el-option
                            v-for="item in processes"
                            :key="item.ID"
                            :label="item.NAME"
                            :value="item.ID">
                        </el-option>
                    </el-select>
                </el-form-item>
                <div class="search-options">
                    <el-form-item>
                        <el-button type="primary" icon="el-icon-search" size="mini" @click="businessCheckQuery('businessForm')">查询</el-button>
                    </el-form-item>
                    <el-form-item style ="float: right">
                        <el-button type="primary" icon="el-icon-folder-checked" size="mini" @click="businessCheck('businessForm')">发起一键校验</el-button>
                    </el-form-item>
                </div>
            </el-form>
        </div>
        <el-table :data="tableData" border size="mini" height="450" @selection-change="MultiSelectionChange">
            <el-table-column type="selection" :selectable='canStartBusiness' width="40"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="organName" label="机构名称" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="periodCode" label="期次号" width="110"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="batchCode" label="批次号" width="100"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="checkProcessName" label="校验状态" width="180" style="color: chartreuse">
                <template slot-scope="scope">
                    <span v-if="scope.row.checkProcess === '1'" style="color: #9A9FFF">{{scope.row.checkProcessName}}</span>
                    <span v-if="scope.row.checkProcess === '2'" style="color: #F099A5">{{scope.row.checkProcessName}}</span>
                    <span v-if="scope.row.checkProcess === '3'" style="color: #9BC454">{{scope.row.checkProcessName}}</span>
                </template>
            </el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="dataCount" label="数据总量" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="truthDataCount" label="校验通过量" width="150">
                <template slot-scope="scope">
                    <span v-if="scope.row.checkProcess === '1'"></span>
                    <span v-if="scope.row.checkProcess === '2'"></span>
                    <span v-if="scope.row.checkProcess === '3'" style="color: #9BC454">{{scope.row.truthDataCount}}</span>
                </template>
            </el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="businessErrorCount" label="校验失败量" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="updateUser" label="操作人"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="updateTime" label="操作时间">
                <template slot-scope="scope">
                    {{ timeFormat(scope.row.updateTime) }}
                </template>
            </el-table-column>
        </el-table>
        <el-pagination
                background
                layout="total, sizes, prev, pager, next, jumper"
                align="center"
                :page-sizes="[10, 20, 30, 50]"
                :total="tableTotal"
                :page-size="tablePageSize"
                :current-page="tableCurrentPage"
                @current-change="handleCurrentChange"
                @size-change="handleSizeChange"
        >
        </el-pagination>
    </div>
</template>

<script>
    export default {
        data() {
            return {
                tableData: [],
                tableTotal : 0,
                tablePageSize: 10,
                tableCurrentPage: 1,
                businessForm: {
                    periodCode: "",
                    batchCode: "",
                    uploadStartData: "",
                    uploadEndData: "",
                    fileName: "",
                    checkProcess:"",
                },
                businessFormRules: {
                },
                processes: [{
                    ID: '1',
                    NAME: '待业务校验'
                    }, {
                    ID: '2',
                    NAME: '业务校验中'
                    }, {
                    ID: '3',
                    NAME: '业务校验完成'
                    }
                ],
                periods : [],
                batchs : [],
                multipleSelection :[],
            };
        },
        watch: {
            //解决清空日期后time变成null的问题
            'businessForm.uploadStartData': function (newVal) {
                if (newVal == null) {
                    this.businessForm.uploadStartData = '';
                }
            },
            'businessForm.uploadEndData': function (newVal) {
                if (newVal == null) {
                    this.businessForm.uploadEndData = '';
                }
            },
        },
        components: {

        },
        methods: {
            handleCurrentChange(val){
                this.tableCurrentPage = val;
                this.businessCheckQuery('businessForm');
            },
            handleSizeChange(val){
                this.tablePageSize = val;
                this.businessCheckQuery('businessForm');
            },
            //查询
            businessCheckQuery(formName){
                if(!sessionStorage.getItem('organCode')){
                    this.$commsgbox.alert("请选择操作机构");
                    return false;
                }
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        let req = {
                            nowpage: this.tableCurrentPage,
                            pagesize: this.tablePageSize,
                            sort : 'id',
                            order: 'desc',
                            organCode : sessionStorage.getItem('organCode'),
                            periodCode: this.businessForm.periodCode,
                            batchCode: this.businessForm.batchCode,
                            fileName: this.businessForm.fileName,
                            startTime: this.businessForm.uploadStartData=="" ? "" : (this.businessForm.uploadStartData + " 00:00:00"),
                            endTime: this.businessForm.uploadEndData=="" ? "" : (this.businessForm.uploadEndData + " 23:59:59"),
                            checkProcess: this.businessForm.checkProcess,
                        };
                        //请求后端
                        this.$api.BusinessCheckQuery(req).then(res => {
                            this.tableTotal = res.data.total;
                            this.tableData = res.data.rows;
                        }).catch(err => {
                            this.$commsgbox.alert(err);
                        });
                    }
                })
            },
            //校验
            businessCheck(){
                if(this.multipleSelection.length == 0){
                    this.$commsgbox.alert("请选择要校验的批次");
                    return false;
                }
                if(this.multipleSelection.length != 1){
                    this.$commsgbox.alert("每次只能选择一个批次进行校验处理.");
                    return false;
                }
                let rowInfo = this.multipleSelection[0];
                let req = {
                    organCode : rowInfo.organCode,
                    periodCode: rowInfo.periodCode,
                    batchCode: rowInfo.batchCode,
                };
                this.$api.BusinessCheck(req).then(res => {
                    this.businessCheckQuery('businessForm');
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });      
            },
            //期次下拉
            getPeriodComBox(){
                let req ={organCode:sessionStorage.getItem('organCode')};
                this.$api.PeriodComboBox(req).then(res => {
                    this.periods = res.data;
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });
            },
            //批次下拉
            getBatchComBox(){
                let req = {period : this.businessForm.periodCode,organCode:sessionStorage.getItem('organCode')};
                this.$api.BatchComboBox(req).then(res => {
                    this.batchs = res.data;
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });
            },
            //期次下拉改变
            changePeriod(){
                this.getBatchComBox();
                this.businessForm.batchCode = '';
            },
            //监听期次点击事件
            focusPeriod(){
                this.businessForm.period = '';
                this.getPeriodComBox();
            },
            //日期转换
            timeFormat(timeVal){
                return this.$comfunc.timeFormat(timeVal);
            },
            
            MultiSelectionChange(val){
                this.multipleSelection = val;
            },
            canStartBusiness(row){
                if(row.checkProcess != 1){
                    return false;
                }else{
                    return true;
                }
            }
        },
        mounted(){
            this.getPeriodComBox();
        },
    };
</script>

<style scoped>
    .search-wrap {
        text-align:left;
        margin-bottom:5px;
        height: 28px;
    }
    .search-wrap .search-options {
        text-align:center;
    }
</style>

