<template>
    <div class="customer-page">
        <div class="customer-search">
            <el-form size ="mini" :model="customerInfoForm" :rules="customerInfoFormRules" ref= "customerInfoForm" :inline="true">
                <el-form-item label="期次" prop="periodCode">
                    <el-select v-model="customerInfoForm.periodCode" style="width:110px;" clearable @change="changeDetailPeriod()" @focus="focusPeriod()">
                        <el-option
                            v-for="item in periodDetails"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item  label="批次" prop="batchCode">
                    <el-select v-model="customerInfoForm.batchCode" style="width:110px;" clearable >
                        <el-option
                                v-for="item in batchDetails"
                                :key="item.id"
                                :label="item.name"
                                :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="校验状态" prop="checkStatus">
                    <el-select v-model="customerInfoForm.checkStatus" style="width:150px;" clearable >
                        <el-option
                            v-for="item in this.$comfunc.getRowCheckStatus()"
                            :key="item.ID"
                            :label="item.NAME"
                            :value="item.ID">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="客户编号" prop="customerCode">
                    <el-input v-model="customerInfoForm.customerCode" style="width:200px;" clearable></el-input>
                </el-form-item>
                <el-form-item label="客户名称" prop="customerName">
                    <el-input v-model="customerInfoForm.customerName" style="width:200px;" clearable></el-input>
                </el-form-item>
                <el-form-item label="证件号码" prop="certificatesCode">
                    <el-input v-model="customerInfoForm.certificatesCode" style="width:200px;" clearable></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" icon="el-icon-search" size="mini" @click="doCustomerInfoQuery()" class="search-btn">查询</el-button>
                    <el-button type="primary" icon="el-icon-download" size="mini" @click="doCustomerInfoDownLoad()" class="search-btn">导出</el-button>
                </el-form-item>
            </el-form>
        </div>
        <el-table :data="tableData" border height="500" size="mini" style="width: 150%">
            <el-table-column show-overflow-tooltip align="center" prop="periodCode" label="期次" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="batchCode" label="批次" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="checkStatus" label="校验状态" width="150">
                <template slot-scope="scope">
                    {{ checkStateFormat(scope.row.checkStatus)}}
                </template>
            </el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="customerCode" label="客户编号" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="customerName" label="客户名称" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="certificatesType" label="证件类型" width="150">
                <template slot-scope="scope">
                    {{ scope.row.certificatesType | typeNameFormat }}
                </template>
            </el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="certificatesCode" label="证件号码" ></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="customerLevel" label="客户等级" width="150"></el-table-column>
            <el-table-column show-overflow-tooltip align="center" prop="statisticsEndDate" label="数据统计截止日期">
                <template slot-scope="scope">
                    {{ timeFormat(scope.row.statisticsEndDate) }}
                </template>
            </el-table-column>
        </el-table>

        <el-pagination
                background
                layout="total, sizes, prev, pager, next, jumper"
                :page-sizes="[10, 20, 30, 50]"
                :total="tableTotal"
                :page-size="tablePageSize"
                :current-page="tableCurrentPage"
                @current-change="handleCurrentChange"
                @size-change="handleSizeChange"
        >
        </el-pagination>
    </div>
</template>

<script>
    import qs from 'qs';
    export default {
        components: {
        },
        data() {
            return {
                //customerInfo table lists
                tableData: [],
                tableTotal : 0,
                tablePageSize: 10,
                tableCurrentPage: 1,
                customerInfoForm :{
                    periodCode :"",
                    batchCode :"",
                    checkStatus: "",
                    customerCode:'',
                    customerName:"",
                    certificatesCode:"",
                },
                periodDetails :[],
                batchDetails :[],
                customerInfoFormRules :{

                },
            }
        },
        methods: {
            //lists
            getCustomerInfo() {
                let req = {
                    nowpage: this.tableCurrentPage,
                    pagesize: this.tablePageSize,
                    organCode : sessionStorage.getItem('organCode'),
                    sort : 'id',
                    order: 'desc'
                };
                req = Object.assign(req,this.customerInfoForm);
                this.queryCustomerInfo(req);
            },
            queryCustomerInfo(req){
                req = Object.assign(req,this.customerInfoForm);
                this.$api.CustomerInfoQuery(req).then(res => {
                    this.tableTotal = res.data.total;
                    this.tableData = res.data.rows;
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });
            },
            doCustomerInfoQuery(){
                this.tableCurrentPage = 1;
                if(!sessionStorage.getItem('organCode')){
                    this.$commsgbox.alert("请选择操作机构");
                    return false;
                }
                this.$refs["customerInfoForm"].validate((valid) => {
                    if (valid) {
                        let req = {
                            nowpage: this.tableCurrentPage,
                            pagesize: this.tablePageSize,
                            organCode : sessionStorage.getItem('organCode'),
                            sort : 'id',
                            order: 'desc',
                        };
                        this.queryCustomerInfo(req);
                    }
                })
            },
            handleCurrentChange(val) {
                this.tableCurrentPage = val;
                this.getCustomerInfo();
            },
            handleSizeChange(val) {
                this.tablePageSize = val;
                this.getCustomerInfo();
            },
            //期次下拉
            getPeriodComBox(){
                let req ={organCode:sessionStorage.getItem('organCode')};
                this.$api.PeriodComboBox(req).then(res => {
                    this.periodDetails = res.data;
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });
            },
            changeDetailPeriod(){
                let req = {period : this.customerInfoForm.periodCode,organCode:sessionStorage.getItem('organCode')};
                this.$api.BatchComboBox(req).then(res => {
                    this.batchDetails = res.data;
                }).catch(err => {
                    this.$commsgbox.alert(err);
                });
                this.customerInfoForm.batchCode = '';
            },
            focusPeriod(){
                this.getPeriodComBox();
            },
            //日期转换
            timeFormat: function(timeVal){
                return this.$comfunc.timeFormatToDate(timeVal);
            },
            //校验状态转换
            checkStateFormat : function(statusVal){
                return this.$comfunc.checkStateFormatToName(statusVal);
            },
            //导出
            doCustomerInfoDownLoad : function(){
                let req = Object.assign({organCode : sessionStorage.getItem('organCode')},this.customerInfoForm);
                window.location.href = '/api/file/customerInfoDownLoad'+ '?' + qs.stringify(req);
            },
        },
        mounted(){
        },
        created() {
            if(sessionStorage.getItem('organCode')){
                this.getPeriodComBox();
                this.getCustomerInfo();
            }
        },
        filters: {
            //0、身份证。\n\r\n1、户口簿。\r\n2、护照。\r\n\n3、军官证。\r\n\n4、士兵证\n。\r\n5、港澳居民来往内地通行证\n。\r\n6、台湾同胞来往内地通行证。\r\n\n7、临时身份证\n。\r\n8、外国人居留证\n。\r\n9、警官证。\r\nX、其他证件。\n',
            typeNameFormat : function(type){
                let typeName = type;
                if(type == '0'){typeName = '身份证'}
                else if(type == '1'){typeName = '户口簿'}
                else if(type == '2'){typeName = '护照'}
                else if(type == '3'){typeName = '军官证'}
                else if(type == '4'){typeName = '士兵证'}
                else if(type == '5'){typeName = '港澳居民来往内地通行证'}
                else if(type == '6'){typeName = '台湾同胞来往内地通行证'}
                else if(type == '7'){typeName = '临时身份证'}
                else if(type == '8'){typeName = '外国人居留证'}
                else if(type == '9'){typeName = '警官证'}
                else if(type == 'x'){typeName = '其他证件'}
                return typeName;
            }
        }
    }
</script>

<style lang="scss" scoped>
.customer-page .customer-search {
    text-align: left;
    margin-left: 40px;
}
</style>