<template>
    <div style="width:100%">
        <div class="search-wrap">
            <el-form size="mini" :model="logForm" :rules="logFormRules" ref= "logForm" :inline="true">
                <el-form-item label="期次" prop="periodCode">
                    <el-select  v-model="logForm.periodCode" style="width:110px;" clearable @change="changePeriod()" @focus="focusPeriod()">
                        <el-option
                            v-for="item in periods"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="批次" prop="batchCode">
                    <el-select v-model="logForm.batchCode" style="width:110px;" clearable >
                        <el-option
                            v-for="item in batchs"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="上传日期">
                    <el-date-picker v-model="logForm.uploadStartData" type="date" placeholder="开始日期"
                                    style="width:130px;" clearable ></el-date-picker>
                    ~
                    <el-date-picker v-model="logForm.uploadEndData" type="date" placeholder="结束日期"
                                    style="width:130px;" clearable ></el-date-picker>
                </el-form-item>
                <el-form-item label="文件名">
                    <el-input v-model="logForm.fileName" placeholder=""></el-input>
                </el-form-item>
                <el-form-item label="阶段" prop="checkProcess" style="display:none;">
                    <el-select v-model="logForm.checkProcess" style="width:110px;" clearable >
                                <el-option
                                v-for="item in processes"
                                :key="item.ID"
                                :label="item.NAME"
                                :value="item.ID">
                            </el-option>
                    </el-select>
                </el-form-item>
            </el-form>
            <div class="search-options">
                <el-button type="primary" icon="el-icon-search" size="mini" @click="logCheckQuery('logForm')">查询</el-button>
                <el-button type="primary" icon="el-icon-download" size="mini" @click="logExport('logForm')">导出</el-button>
            </div>
        </div>
        <div class="table-wrap">
            <el-table :data="tableData" @selection-change="ExportSelectionChange" border size="mini" height="500" class="table-list">
                <el-table-column type="selection" :selectable='canExportErrorLog' width="40"> </el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="organName" label="机构名称" width="160"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="periodCode" label="期次号" width="110"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="batchCode" label="批次号" width="100"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="checkProcessName" label="校验阶段" width="180" style="color: chartreuse">
                    <template>
                        业务校验
                    </template>
                </el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="dataCount" label="数据总量" width="150"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="businessErrorCount" label="校验失败量" width="150"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="updateUser" label="操作人" width="180"></el-table-column>
                <el-table-column show-overflow-tooltip align="center" prop="updateTime" label="操作时间">
                    <template slot-scope="scope">
                        {{ timeFormat(scope.row.updateTime) }}
                    </template>
                </el-table-column>
            </el-table>
            <div class="log-detail-link">
                <div style="position: relative;top: 200px;">
                    <el-link href="/logDetail" target="_blank" style="color:#409EFF;">进入日志详情查看</el-link>
                </div>
            </div>
        </div>
        <el-pagination
                background
                layout="total, sizes, prev, pager, next, jumper"
                align="center"
                :page-sizes="[10, 20, 30, 50]"
                :total="tableTotal"
                :page-size="tablePageSize"
                :current-page="tableCurrentPage"
                @current-change="handleCurrentChange"
                @size-change="handleSizeChange"
        >
        </el-pagination>
    </div>
</template>

<script>
import qs from 'qs';
export default {
    data() {
        return {
            tableData: [],
            tableTotal : 0,
            tablePageSize: 10,
            tableCurrentPage: 1,
            logForm: {
                periodCode: "",
                batchCode: "",
                uploadStartData: "",
                uploadEndData: "",
                fileName: "",
                checkProcess: "",
            },
            logFormRules: {},
            periods : [],
            batchs : [],
            exportMultipleSelection:[],
            processes: [{
                ID: '3',
                NAME: '业务校验'
                }, {
                ID: '6',
                NAME: '真实性校验'
            }],
        };
    },
    computed: {

    },
    components: {

    },

    methods: {
        ExportSelectionChange(val){
            this.exportMultipleSelection = val;
        },
        handleCurrentChange(val){
            this.tableCurrentPage = val;
        },
        handleSizeChange(val){
            this.tablePageSize = val;
        },
        //查询
        logCheckQuery(formName){
            if(!sessionStorage.getItem('organCode')){
                this.$commsgbox.alert("请选择操作机构");
                return false;
            }
            this.$refs[formName].validate((valid) => {
                if (valid) {
                    let req = {
                        nowpage: this.tableCurrentPage,
                        pagesize: this.tablePageSize,
                        sort : 'id',
                        order: 'desc',
                        organCode : sessionStorage.getItem('organCode'),
                        periodCode: this.logForm.periodCode,
                        batchCode: this.logForm.batchCode,
                        fileName: this.logForm.fileName,
                        startTime: this.logForm.uploadStartData=="" ? "" : (this.logForm.uploadStartData + " 00:00:00"),
                        endTime: this.logForm.uploadEndData=="" ? "" : (this.logForm.uploadEndData + " 23:59:59"),
                        checkProcess: this.logForm.checkProcess,
                    };
                    //请求后端
                    this.$api.CheckLogQuery(req).then(res => {
                        this.tableTotal = res.data.total;
                        this.tableData = res.data.rows;
                    }).catch(err => {
                        this.$commsgbox.alert(err);
                    });
                }
            })
        },
        //导出
        logExport(formName){
            if(this.exportMultipleSelection.length == 0){
                this.$commsgbox.alert("请选择要导出的列表项.");
                return false;
            }
            let checkRecordIds = [];
            for(let index in this.exportMultipleSelection) {
                checkRecordIds.push(this.exportMultipleSelection[index].id);
            }
            let req = {checkRecordIds : checkRecordIds.toString()};
            window.location.href = '/api/file/downloadCheckErrorLog' + '?' + qs.stringify(req);
        },
        //期次下拉
        getPeriodComBox(){
            let req ={organCode:sessionStorage.getItem('organCode')};
            this.$api.PeriodComboBox(req).then(res => {
                this.periods = res.data;
            }).catch(err => {
                this.$commsgbox.alert(err);
            });
        },
        //期次下拉改变
        changePeriod(){
            let req = {period : this.logForm.periodCode,organCode:sessionStorage.getItem('organCode')};
            this.$api.BatchComboBox(req).then(res => {
                this.batchs = res.data;
            }).catch(err => {
                this.$commsgbox.alert(err);
            });
            this.logForm.batchCode = '';
        },
        focusPeriod(){
            this.getPeriodComBox();
        },
        timeFormat(timeVal){
            return this.$comfunc.timeFormat(timeVal);
        },
        canExportErrorLog(row){
            if(row.businessErrorCount > 0){
                return true;
            }else{
                return false;
            }
        }
    },
    mounted(){
    },
};
</script>

<style scoped>
    .search-wrap {
        text-align:left;
        margin-bottom:5px;
    }
    .search-wrap .search-options {
        text-align:center;
    }
    .table-wrap {
        position: relative;
        width: 100%;
        text-align: left;
    }
    .table-wrap .table-list {
        width:96%;
        display:inline-block;
    }
    .table-wrap .log-detail-link {
        width:3%;
        height:448px;
        display:inline-block;
        border:1px solid #EBEEF5;
        border-left:none;
        position:absolute;
        text-align:center;
    }
</style>

