<template>
    <layout-page-list>
       <div class="page-flexible">
            <div class="wrap">
                <el-row>
                    <el-col :span="11">
                        <div class="module">
                            <div class="title">灵活报表维度</div>
                            <div class="condition">
                                <div class="search">
                                    <el-form :inline="true" :model="flexibleRangeForm" :rules="flexibleRangeFormRules" ref="flexibleRangeForm" size="mini">
                                        <el-form-item label="期次" prop="periodCode" :label-width="flexibleRangeFormLabelWidth">
                                            <el-select v-model="flexibleRangeForm.periodCode" clearable @change="changeConditionPeriod()" @focus="focusConditionPeriod()">
                                                <el-option
                                                    v-for="item in conditionPeriods"
                                                    :key="item.id"
                                                    :label="item.name"
                                                    :value="item.id">
                                                </el-option>
                                            </el-select>
                                        </el-form-item>
                                        <el-form-item label="样本名称" prop="sampleCode" :label-width="flexibleRangeFormLabelWidth">
                                            <el-select v-model="flexibleRangeForm.sampleCode" filterable clearable placeholder="输入或选择" @change="getFlexibleSampleRange('flexibleRangeForm')">
                                                <el-option
                                                    v-for="item in conditionSampleCodes"
                                                    :key="item.id"
                                                    :label="item.name"
                                                    :value="item.id">
                                                </el-option>
                                            </el-select>
                                        </el-form-item>
                                        <el-form-item label="放款月份" :label-width="flexibleRangeFormLabelWidth">
                                            <el-date-picker
                                            v-model="flexibleRangeForm.contractStartDateYmFrom"
                                            type="month"
                                            placeholder="选择月"
                                            value-format="yyyy-MM"
                                            style="width:170px;"
                                            clearable
                                            ></el-date-picker>
                                            ~
                                            <el-date-picker
                                            v-model="flexibleRangeForm.contractStartDateYmTo"
                                            type="month"
                                            placeholder="选择月"
                                            value-format="yyyy-MM"
                                            style="width:170px;"
                                            clearable
                                            ></el-date-picker>
                                        </el-form-item>
                                        <el-form-item label="统计月份" :label-width="flexibleRangeFormLabelWidth">
                                            <el-date-picker
                                            v-model="flexibleRangeForm.tongjiFrom"
                                            type="month"
                                            placeholder="选择月"
                                            style="width:170px;"
                                            clearable
                                            ></el-date-picker>
                                            ~
                                            <el-date-picker
                                            v-model="flexibleRangeForm.tongjiTo"
                                            type="month"
                                            placeholder="选择月"
                                            style="width:170px;"
                                            clearable
                                            ></el-date-picker>
                                        </el-form-item>
                                    </el-form>
                                    <div class="tag-zone">
                                        <div v-for="dimension in this.categorysDatas.dimension" :key="dimension.id" class="tag">
                                            <el-tag
                                                v-if="checkedDimensionId.includes(dimension.id)"
                                                effect="dark"
                                                :disable-transitions="false"
                                                @click="chooseTag(dimension.id, dimension.name, dimension.type)"
                                                >
                                                {{dimension.name}}
                                            </el-tag>
                                            <el-tag
                                                v-else
                                                :disable-transitions="false"
                                                @click="chooseTag(dimension.id, dimension.name, dimension.type)"
                                                >
                                                {{dimension.name}}
                                            </el-tag>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="module">
                            <div class="title">灵活报表结果列表</div>
                            <div class="result">
                                <div class="search">
                                    <el-form :inline="true" :model="flexibleResultForm" size="mini">
                                        <el-form-item label="期  次" :label-width="resultLabelWidth">
                                            <el-select v-model="flexibleResultForm.periodCode" clearable @change="changeResultPeriod()" @focus="focusResultPeriod()">
                                                <el-option
                                                    v-for="item in resultPeriods"
                                                    :key="item.id"
                                                    :label="item.name"
                                                    :value="item.id">
                                                </el-option>
                                            </el-select>
                                        </el-form-item>
                                        <el-form-item label="样本名称" :label-width="resultLabelWidth" style="margin-left:20px;">
                                            <el-select v-model="flexibleResultForm.sampleCode" filterable clearable placeholder="输入或选择">
                                                <el-option
                                                    v-for="item in resultSampleCodes"
                                                    :key="item.id"
                                                    :label="item.name"
                                                    :value="item.id">
                                                </el-option>
                                            </el-select>
                                        </el-form-item>
                                        <div class="option">
                                            <el-button type="primary" icon="el-icon-search" size="mini" @click="createFlexibleReportResultQuery()">查询</el-button>
                                            <el-button type="primary" icon="el-icon-download" size="mini" @click="exportFlexibleReport()" class="export">导出</el-button>
                                        </div>
                                    </el-form>
                                </div>
                                <el-table :data="tableData" border size="mini" height="420" @selection-change="MultiSelectionChange" class="list">
                                    <el-table-column type="selection" :selectable='canDownload' width="40"></el-table-column>
                                    <el-table-column show-overflow-tooltip prop="sampleName" align="left" width = "200" label="样本名称"></el-table-column>
                                    <el-table-column show-overflow-tooltip prop="sampleReportName" align="left" width = "190" label="报表名称"></el-table-column>
                                    <el-table-column show-overflow-tooltip align="center" label="操作" width="90">
                                        <template slot-scope="scope">
                                            <el-button size="mini" type="info" v-if="scope.row.reportStatus === '2' || scope.row.reportStatus === '4'" @click="recreate(scope.row)">重生成</el-button>
                                            <el-button size="mini" type="primary" class="el-icon-view" v-if="scope.row.reportStatus === '5'" @click="preview(scope.row)">预览</el-button>
                                        </template>
                                    </el-table-column>
                                    <el-table-column show-overflow-tooltip prop="reportStatus" align="center" width = "100" label="生成状态">
                                        <template slot-scope="scope">
                                            <span v-if="scope.row.reportStatus === '1'" style="color: #9A9FFF">生成中</span>
                                            <span v-if="scope.row.reportStatus === '2'" style="color: red">数据生成失败</span>
                                            <span v-if="scope.row.reportStatus === '3'" style="color: #9A9FCF">数据生成成功</span>
                                            <span v-if="scope.row.reportStatus === '4'" style="color: red">报表生成失败</span>
                                            <span v-if="scope.row.reportStatus === '5'" style="color: #9BC454">报表生成成功</span>
                                        </template>
                                    </el-table-column>
                                    <el-table-column show-overflow-tooltip prop="remarks" align="center" width = "300" label="错误描述"></el-table-column>
                                </el-table>
                                <el-pagination
                                    background
                                    layout="total, sizes, prev, pager, next, jumper"
                                    align="center"
                                    :page-sizes="[10, 20, 30, 50]"
                                    :total="tableTotal"
                                    :page-size="tablePageSize"
                                    :current-page="tableCurrentPage"
                                    :pager-count=5
                                    @current-change="handleCurrentChange"
                                    @size-change="handleSizeChange"
                                ></el-pagination>
                            </div>
                        </div>
                    </el-col>
                    <el-col :span="8">
                        <div class="module">
                            <div class="title">灵活报表度量</div>
                            <div class="sub-title">业务分布类</div>
                            <div class="tag-zone">
                                <div v-for="measure in this.categorysDatas.measures_yewu" :key="measure.id" class="tag">
                                    <el-tag
                                        v-if="checkedMeasuresId.includes(measure.id)"
                                        effect="dark"
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                    <el-tag
                                        v-else
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                </div>
                            </div>
                            <div class="sub-title">资产表现类</div>
                            <div class="tag-zone">
                                <div v-for="measure in this.categorysDatas.measures_zichan" :key="measure.id" class="tag">
                                    <el-tag
                                        v-if="checkedMeasuresId.includes(measure.id)"
                                        effect="dark"
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                    <el-tag
                                        v-else
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                </div>
                            </div>
                            <div class="sub-title">催收表现类</div>
                            <div class="tag-zone">
                                <div v-for="measure in this.categorysDatas.measures_cuishou" :key="measure.id" class="tag">
                                    <el-tag
                                        v-if="checkedMeasuresId.includes(measure.id)"
                                        effect="dark"
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                    <el-tag
                                        v-else
                                        :disable-transitions="false"
                                        @click="chooseTag(measure.id, measure.name, measure.type)"
                                        >
                                        {{measure.name}}
                                    </el-tag>
                                </div>
                            </div>
                        </div>
                    </el-col>
                    <el-col :span="5">
                        <div class="module">
                            <div class="title">待生成报表列顺序</div>
                            <div class="tag-wrap">
                                <el-scrollbar style="height:100%;">
                                    <div v-for="tag in dynamicTags" :key="tag.id" class="tag">
                                        <el-tag
                                            closable
                                            :disable-transitions="false"
                                            type="success"
                                            @close="handleCloseTag(tag.id, tag.type)">
                                            {{tag.name}}
                                        </el-tag>
                                    </div>
                                </el-scrollbar>
                            </div>
                            <div>
                                <span><span style="color: #F56C6C;margin-right: 4px;">*</span>灵活报表名称 <el-input v-model="sampleFlexibleName" autocomplete="off" style="margin:2px 10px;"></el-input></span>
                                <el-button type="primary" size="mini" style="float:right;margin-top:20px;" @click="createFlexibleReport()">生成灵活报表</el-button>
                            </div>
                        </div>
                    </el-col>
                </el-row>

                <el-dialog :title="sampleReportNamePreview" :visible.sync="analyzeResultPreview" :close-on-click-modal="false" :append-to-body="true" width="70%">
                    <el-scrollbar style="height:100%;">
                        <div style="height:500px;" v-html="htmlPreview"></div>
                    </el-scrollbar>
                </el-dialog>
            </div>
        </div>
    </layout-page-list>
</template>

<script>
import LayoutPageList from "layout/LayoutPageList.vue";
export default {
    components: {
        LayoutPageList
    },
    data() {
        return {
           //分析条件
            flexibleRangeForm: {
                periodCode: "",
                sampleCode: "",
                contractStartDateYmFrom: "",
                contractStartDateYmTo: "",
                tongjiFrom: "",
                tongjiTo: "",
            },
            categorys: {
                dimension : [
                    "contract_product",
                    "contract_month_rate",
                    "contract_total_month",
                    "contract_country",
                    "contract_province",
                    "contract_city",
                    "customer_sex",
                    "customer_age_scan",
                    "repay_type",
                    "loan_step_class1",
                    "loan_step_class2"
                ],
                measures_yewu : [
                    "all_loan_avg_amount",
                    "all_loan_amount",
                    "all_loan_count",
                    "month_add_loan_amount",
                    "month_loan_count",
                    "all_loan_balance",
                    "month_loan_avg_amount",
                    "year_loan_amount",
                    "year_loan_count",
                    "year_loan_avg_amount",
                    "tongbi",
                    "zhanbi",
                    "huanbi"
                ],
                measures_zichan : [
                    "month_plan_interest",
                    "end_month_loan_count",
                    "last_month_loan_count",
                    "month_plan_total",
                    "last_month_interest",
                    "month_deal_amount",
                    "end_month_loan_balance",
                    "new_add_count",
                    "month_deal_interest",
                    "end_month_interest",
                    "month_plan_amount",
                    "month_deal_total",
                    "last_month_loan_balance",
                    "half_advance_repay",
                    "all_advance_repay",
                    "normal_loan_balance",
                    "M0_count",
                    "M1_count",
                    "M2_count",
                    "M3_count",
                    "M4_count",
                    "M5_count",
                    "M6_count",
                    "M6+_count",
                    "M0_amount",
                    "M1_amount",
                    "M2_amount",
                    "M3_amount",
                    "M4_amount",
                    "M5_amount",
                    "M6_amount",
                    "M6+_amount",
                ],
                measures_cuishou : [
                    "M0_1",
                    "M1_2",
                    "M2_3",
                    "M3_4",
                    "M4_5",
                    "M5_6",
                    "M6_6+",
                    "M1_3",
                    "M1_4",
                    "M1_5",
                    "M1_6",
                    "M1_6+",
                    "M3_5",
                    "M3_6",
                    "M3_6+",
                ]           
            },
            categorysDatas: {},
            checkedDimensionId: [],
            checkedMeasuresId: [],
            flexibleRangeFormRules: {
                periodCode: [
                    { required: true, message: '请选择期次号', trigger: 'change' }
                ],
                sampleCode: [
                    { required: true, message: '请输入或选择样本名称', trigger: 'change' }
                ]
            },
            flexibleRangeFormLabelWidth: '80px',
            conditionPeriods:[],
            conditionSampleCodes:[],

            //灵活报表列表
            resultLabelWidth: '70px',
            flexibleResultForm: {
                periodCode: "",
                sampleCode: ""
            },
            resultPeriods:[],
            resultSampleCodes:[],
            tableData: [],
            tableTotal: 0,
            tablePageSize: 50,
            tableCurrentPage: 1,
            multipleSelection :[],

            sampleFlexibleName: '',

            //动态选择的待生成报告标签
            dynamicTags: [],
            analyzeResultPreview: false,
            sampleReportNamePreview: '',
            htmlPreview:'',
        }
    },
    watch: {
        //解决清空日期后time变成null的问题
        'flexibleRangeForm.contractStartDateYmFrom': function (newVal) {
            if (newVal == null) {
                this.flexibleRangeForm.contractStartDateYmFrom = '';
            }
        },
        'flexibleRangeForm.contractStartDateYmTo': function (newVal) {
            if (newVal == null) {
                this.flexibleRangeForm.contractStartDateYmTo = '';
            }
        },
        'flexibleRangeForm.tongjiFrom': function (newVal) {
            if (newVal == null) {
                this.flexibleRangeForm.tongjiFrom = '';
            }
        },
        'flexibleRangeForm.tongjiTo': function (newVal) {
            if (newVal == null) {
                this.flexibleRangeForm.tongjiTo = '';
            }
        },
    },
    methods: {
        getDimensionElements(){
            let req = {};
            this.$api.DimensionElements(req).then(res => {
                let elements = res.data;
                this.categorysDatas = {};
                for(let type in this.categorys){
                    this.categorysDatas[type] = [];
                    for(let key in this.categorys[type]){
                        let id = this.categorys[type][key];
                        if(Object.prototype.hasOwnProperty.call(elements, id)){
                            this.categorysDatas[type].push({id:id, name:elements[id], type:type});
                        }
                    }
                }
            }).catch(err => {
                this.$commsgbox.alert(err);
            });
        },
        resetCondition(){
            this.flexibleRangeForm.contractStartDateYmFrom = '';
            this.flexibleRangeForm.contractStartDateYmTo = '';
            this.flexibleRangeForm.tongjiFrom = '';
            this.flexibleRangeForm.tongjiTo = '';
            this.checkedDimensionId = [];
            this.checkedMeasuresId = [];
        },
        focusConditionPeriod(){
            this.flexibleRangeForm.periodCode = '';
            let req ={organCode:sessionStorage.getItem('organCode')};
            this.$api.PeriodComboBox(req).then(res => {
                this.conditionPeriods = res.data;
            }).catch(err => {
                this.$commsgbox.alert(err);
            });
        },
        changeConditionPeriod(){
            this.flexibleRangeForm.sampleCode = '';
            let req = {periodCode : this.flexibleRangeForm.periodCode, organCode:sessionStorage.getItem('organCode')};
            this.$api.SampleNameComboBox(req).then(res => {
                this.conditionSampleCodes = res.data;
            }).catch(err => {
                this.$commsgbox.alert(err);
            });
        },
        getFlexibleSampleRange(formName){
            if(!sessionStorage.getItem('organCode')){
                this.$commsgbox.alert("请选择操作机构");
                return false;
            }
            this.$refs[formName].validate((valid) => {
                if (valid) {
                    let req = {
                        sampleCode: this.flexibleRangeForm.sampleCode,
                    };
                    this.$api.FlexibleSampleRange(req).then(res => {
                        this.resetCondition();
                        if(res.data.minStartDate.length == 6){
                            this.flexibleRangeForm.contractStartDateYmFrom = res.data.minStartDate.substr(0,4)+'-'+res.data.minStartDate.substr(4,2);
                            this.flexibleRangeForm.tongjiFrom = this.flexibleRangeForm.contractStartDateYmFrom;
                        }
                        if(res.data.maxStartDate.length == 6){
                            this.flexibleRangeForm.contractStartDateYmTo = res.data.maxStartDate.substr(0,4)+'-'+res.data.maxStartDate.substr(4,2);
                        }
                        if(res.data.maxStatisticsDate.length == 6){
                            this.flexibleRangeForm.tongjiTo = res.data.maxStatisticsDate.substr(0,4)+'-'+res.data.maxStatisticsDate.substr(4,2);
                        }
                        // this.categoryCheckList = [];
                        // this.dynamicTags = [];
                    }).catch(err => {
                        this.$commsgbox.alert(err);
                    });
                }
            });
        },
        chooseTag(id, name, type){
            if(type == "dimension"){
                if(this.checkedDimensionId.includes(id)){
                    let index = this.checkedDimensionId.indexOf(id);
                    this.checkedDimensionId.splice(index, 1);
                }else{
                    if(this.checkedDimensionId.length >= 2){
                        this.$commsgbox.alert("维度最多同时查看2个.");
                        return false;
                    }else{
                        this.checkedDimensionId.push(id);
                    }
                }
            }else{
                if(this.checkedMeasuresId.includes(id)){
                    let index = this.checkedMeasuresId.indexOf(id);
                    this.checkedMeasuresId.splice(index, 1);
                }else{
                    this.checkedMeasuresId.push(id);
                }
            }
            this.syncDynamicTags();
        },
        syncDynamicTags(){
            this.dynamicTags = [];
            for(let index in this.checkedDimensionId){
                this.dynamicTags.push(this.getCategoryDateById(this.checkedDimensionId[index]));
            }
            // 因为度量想要按照页面分类的放在一起，所以没有按照用户选择的checkedMeasuresId进行遍历
            for(let type in this.categorys){
                if(type != "dimension"){
                    for(let key in this.categorys[type]){
                        let id = this.categorys[type][key];
                        if(this.checkedMeasuresId.includes(id)){
                            this.dynamicTags.push(this.getCategoryDateById(id));
                        }
                    }
                }
            }
            // 下面是用户选择的顺序
            // for(let index in this.checkedMeasuresId){
            //     this.dynamicTags.push(this.getCategoryDateById(this.checkedMeasuresId[index]));
            // }
        },
        getCategoryDateById(id){
            for(let type in this.categorysDatas){
                for(let key in this.categorysDatas[type]){
                    if(this.categorysDatas[type][key].id === id){
                        return this.categorysDatas[type][key];
                    }
                }
            }
        },
        handleCloseTag(id, type){
            if(type == "dimension"){
                let index = this.checkedDimensionId.indexOf(id);
                this.checkedDimensionId.splice(index, 1);
            }else{
                let index = this.checkedMeasuresId.indexOf(id);
                this.checkedMeasuresId.splice(index, 1);
            }
            this.syncDynamicTags();
        },
        //创建灵活报表
        createFlexibleReport(){
            if(!sessionStorage.getItem('organCode')){
                this.$commsgbox.alert("请选择操作机构");
                return false;
            }
            if(this.flexibleRangeForm.tongjiFrom == '' && this.flexibleRangeForm.tongjiTo == ''){
                this.$commsgbox.alert("请选择统计月份");
                return false;
            }
            if(this.checkedMeasuresId.length == 0){
                this.$commsgbox.alert("至少选择一个度量信息");
                return false;
            }
            if(!this.sampleFlexibleName){
                this.$commsgbox.alert("请输入灵活报表名称");
                return false;
            }
            this.$refs['flexibleRangeForm'].validate((valid) => {
                if (valid) {
                    let req = {
                        organCode : sessionStorage.getItem('organCode'),
                        periodCode : this.flexibleRangeForm.periodCode,
                        sampleCode : this.flexibleRangeForm.sampleCode,
                        loanMonth : this.getMonthRange(this.flexibleRangeForm.contractStartDateYmFrom, this.flexibleRangeForm.contractStartDateYmTo),
                        tjMonth : this.getMonthRange(this.flexibleRangeForm.tongjiFrom, this.flexibleRangeForm.tongjiTo),
                        dimension : this.checkedDimensionId.join(','),
                        measure : this.checkedMeasuresId.join(','),
                        sampleFlexibleName : this.sampleFlexibleName,
                    };
                    this.$api.AddFlexibleRecord(req).then(res => {
                        if(!this.flexibleResultForm.periodCode){
                            this.flexibleResultForm.periodCode = this.flexibleRangeForm.periodCode;
                        }
                        if(!this.flexibleResultForm.sampleCode){
                            this.resultSampleCodes = this.conditionSampleCodes;
                            this.flexibleResultForm.sampleCode = this.flexibleRangeForm.sampleCode;
                        }
                        // this.createFlexibleReportResultQuery();
                    }).catch(err => {
                        this.$commsgbox.alert(err);
                    });
                }
            });  
        },
        getMonthRange(from, to){
            let month = '';
            from = from.replace('-', '');
            to = to.replace('-', '');
            if(from != '' && to == ''){
                month = from + '-' + from;
            }else if(from == '' && to != ''){
                month = to + '-' + to;
            }else if(from != '' && to != ''){
                month = from + '-' + to;
            }
            return month;
        },
        //样本结果分析
        // focusResultPeriod(){
        //     this.flexibleResultForm.periodCode = '';
        //     let req ={organCode:sessionStorage.getItem('organCode')};
        //     this.$api.PeriodComboBox(req).then(res => {
        //         this.resultPeriods = res.data;
        //     }).catch(err => {
        //         this.$commsgbox.alert(err);
        //     });
        // },
        // changeResultPeriod(){
        //     this.flexibleResultForm.sampleCode = '';
        //     let req = {periodCode : this.flexibleResultForm.periodCode, organCode:sessionStorage.getItem('organCode')};
        //     this.$api.SampleNameComboBox(req).then(res => {
        //         this.resultSampleCodes = res.data;
        //     }).catch(err => {
        //         this.$commsgbox.alert(err);
        //     });
        // },
        // handleCurrentChange(val){
        //     this.tableCurrentPage = val;
        //     this.sampleAnalyzeResultQuery();
        // },
        // handleSizeChange(val){
        //     this.tablePageSize = val;
        //     this.sampleAnalyzeResultQuery();
        // },
        // createFlexibleReportResultQuery(){
        //     this.tableCurrentPage = 1;
        //     this.sampleAnalyzeResultQuery();
        // },
        // //查询
        // sampleAnalyzeResultQuery(){
        //     if(!sessionStorage.getItem('organCode')){
        //         this.$commsgbox.alert("请选择操作机构");
        //         return false;
        //     }
        //     let req = {
        //         nowpage: this.tableCurrentPage,
        //         pagesize: this.tablePageSize,
        //         sort : 'id',
        //         order: 'desc',
        //         organCode : sessionStorage.getItem('organCode'),
        //         periodCode: this.flexibleResultForm.periodCode,
        //         sampleCode: this.flexibleResultForm.sampleCode,
        //         sampleReportName: this.flexibleResultForm.sampleReportName,
        //     };
        //     //请求后端
        //     this.$api.SampleAnalyzeResultQuery(req).then(res => {
        //         this.tableTotal = res.data.total;
        //         this.tableData = res.data.rows;
        //     }).catch(err => {
        //         this.$commsgbox.alert(err);
        //     });
        // },
        // recreate(row){
        //     if(!sessionStorage.getItem('organCode')){
        //         this.$commsgbox.alert("请选择操作机构");
        //         return false;
        //     }
        //     let req = {
        //         sampleReportCode: row.sampleReportCode,
        //     };
        //     this.$api.SampleAnalyzeDetailRecreate(req).then(res => {
        //         this.sampleAnalyzeResultQuery();
        //     }).catch(err => {
        //         this.$commsgbox.alert(err);
        //     });
        // },
        // preview(row){
        //   if(!sessionStorage.getItem('organCode')){
        //         this.$commsgbox.alert("请选择操作机构");
        //         return false;
        //     }
        //     let req = {
        //         sampleReportCode: row.sampleReportCode,
        //     };
        //     //请求后端
        //     this.$api.SampleAnalyzePreview(req).then(res => {
        //         this.htmlPreview = res.data.html;
        //         this.sampleReportNamePreview = res.data.reportName;
        //         this.analyzeResultPreview = true;
        //     }).catch(err => {
        //         this.$commsgbox.alert(err);
        //     });
        // },
        // exportFlexibleReport(){
        //     if(this.multipleSelection.length == 0){
        //         this.$commsgbox.alert("请选择要导出的列表项.");
        //         return false;
        //     }
        //     let sampleReportCodes = [];
        //     for(let index in this.multipleSelection) {
        //         sampleReportCodes.push(this.multipleSelection[index].sampleReportCode);
        //     }
        //     let req = {sampleReportCodes : sampleReportCodes.toString()};
        //     window.location.href = '/api/sampleAnalyse/download' + '?' + qs.stringify(req);
        // },
        // MultiSelectionChange(val){
        //     this.multipleSelection = val;
        // },
        // canDownload(row){
        //     if(row.reportStatus == '5'){
        //         return true;
        //     }else{
        //         return false;
        //     }
        // },
    },
    created() {
       this.getDimensionElements();
    }
}
</script>

<style scoped>
.page-flexible .wrap {
    margin:10px;
}
.page-flexible .wrap .module {
    width: 96%;
    margin:0 auto;
}
.page-flexible .wrap .module .title {
    height: 40px;
    line-height: 40px;
    text-align: left !important;
    font-size: 22px;
    font-weight: bold;
    color: #000;
    padding: 10px;
}
.page-flexible .wrap .module .sub-title {
    height: 30px;
    line-height: 30px;
    text-align: left !important;
    font-size: 18px;
    font-weight: bold;
    color: #000;
    padding: 8px;
}
.page-flexible .wrap .module .tag-zone{
    text-align: justify;
}
.page-flexible .wrap .module .tag {
    display: inline-block;
    margin: 5px;
}
.page-flexible .wrap .module .tag-wrap {
    height: 750px;
}
.page-flexible .wrap .module .tag-wrap .tag {
    display: block;
    margin-top:5px;
    text-align:left;
}
.page-flexible .wrap .module .search{
    text-align: left;
}
.page-flexible .wrap .module .result .search .option{
    margin: 5px;
}
.page-flexible .wrap .module .result .search .option .export{
    background-color: #fff;
    color: #555;
    margin-left:30px;
}
</style>
<style lang="scss">
.title-wrap{
    margin-top:0px !important;
}
.list-wrap {
    padding:0px !important;
    // height: 100px;
}

.page-flexible .wrap .module .search .el-form-item__label{
    text-align: center;
}
.page-flexible .wrap .module .search .el-input,
.page-flexible .wrap .module .search .el-select {
    width: 200px;
}
.page-flexible .tag-wrap .el-scrollbar .el-scrollbar__wrap{
    overflow-x: hidden;
}
.el-checkbox__input.is-disabled .el-checkbox__inner::after {
    transform: rotate(45deg) scaleY(1);
}
.page-flexible .wrap .module .result .search .el-form-item--mini.el-form-item, .el-form-item--small.el-form-item {
    margin-bottom: 5px;
}
@media only screen and (max-width: 1400px) {
    .page-flexible .wrap .module .search .el-input,
    .page-flexible .wrap .module .search .el-select {
        width: 170px;
    }
    .page-flexible .wrap .module .result .el-pagination__jump{
        display: none;
    }
}
</style>